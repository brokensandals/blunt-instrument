// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`demo examples factorial 1`] = `
"tracer.registerAST(JSON.parse(\\"{\\\\\\"type\\\\\\":\\\\\\"Program\\\\\\",\\\\\\"start\\\\\\":0,\\\\\\"end\\\\\\":80,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":0},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":22}},\\\\\\"sourceType\\\\\\":\\\\\\"module\\\\\\",\\\\\\"interpreter\\\\\\":null,\\\\\\"body\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"FunctionDeclaration\\\\\\",\\\\\\"start\\\\\\":0,\\\\\\"end\\\\\\":57,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":0},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":1}},\\\\\\"id\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":9,\\\\\\"end\\\\\\":12,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":9},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":12},\\\\\\"identifierName\\\\\\":\\\\\\"fac\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"fac\\\\\\",\\\\\\"biId\\\\\\":3},\\\\\\"generator\\\\\\":false,\\\\\\"async\\\\\\":false,\\\\\\"params\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":13,\\\\\\"end\\\\\\":14,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":13},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":14},\\\\\\"identifierName\\\\\\":\\\\\\"n\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"n\\\\\\",\\\\\\"biId\\\\\\":4}],\\\\\\"body\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BlockStatement\\\\\\",\\\\\\"start\\\\\\":16,\\\\\\"end\\\\\\":57,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":16},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":1}},\\\\\\"body\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"ReturnStatement\\\\\\",\\\\\\"start\\\\\\":20,\\\\\\"end\\\\\\":55,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":2},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":37}},\\\\\\"argument\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"ConditionalExpression\\\\\\",\\\\\\"start\\\\\\":27,\\\\\\"end\\\\\\":54,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":9},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":36}},\\\\\\"test\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BinaryExpression\\\\\\",\\\\\\"start\\\\\\":27,\\\\\\"end\\\\\\":33,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":9},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":15}},\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":27,\\\\\\"end\\\\\\":28,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":9},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":10},\\\\\\"identifierName\\\\\\":\\\\\\"n\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"n\\\\\\",\\\\\\"biId\\\\\\":9},\\\\\\"operator\\\\\\":\\\\\\"==\\\\\\",\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":32,\\\\\\"end\\\\\\":33,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":14},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":15}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":1,\\\\\\"raw\\\\\\":\\\\\\"1\\\\\\"},\\\\\\"value\\\\\\":1,\\\\\\"biId\\\\\\":10},\\\\\\"biId\\\\\\":8},\\\\\\"consequent\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":36,\\\\\\"end\\\\\\":37,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":18},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":19}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":1,\\\\\\"raw\\\\\\":\\\\\\"1\\\\\\"},\\\\\\"value\\\\\\":1,\\\\\\"biId\\\\\\":11},\\\\\\"alternate\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BinaryExpression\\\\\\",\\\\\\"start\\\\\\":40,\\\\\\"end\\\\\\":54,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":22},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":36}},\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":40,\\\\\\"end\\\\\\":41,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":22},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":23},\\\\\\"identifierName\\\\\\":\\\\\\"n\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"n\\\\\\",\\\\\\"biId\\\\\\":13},\\\\\\"operator\\\\\\":\\\\\\"*\\\\\\",\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"CallExpression\\\\\\",\\\\\\"start\\\\\\":44,\\\\\\"end\\\\\\":54,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":26},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":36}},\\\\\\"callee\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":44,\\\\\\"end\\\\\\":47,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":26},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":29},\\\\\\"identifierName\\\\\\":\\\\\\"fac\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"fac\\\\\\",\\\\\\"biId\\\\\\":15},\\\\\\"arguments\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"BinaryExpression\\\\\\",\\\\\\"start\\\\\\":48,\\\\\\"end\\\\\\":53,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":30},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":35}},\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":48,\\\\\\"end\\\\\\":49,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":30},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":31},\\\\\\"identifierName\\\\\\":\\\\\\"n\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"n\\\\\\",\\\\\\"biId\\\\\\":17},\\\\\\"operator\\\\\\":\\\\\\"-\\\\\\",\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":52,\\\\\\"end\\\\\\":53,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":34},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":35}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":1,\\\\\\"raw\\\\\\":\\\\\\"1\\\\\\"},\\\\\\"value\\\\\\":1,\\\\\\"biId\\\\\\":18},\\\\\\"biId\\\\\\":16}],\\\\\\"biId\\\\\\":14},\\\\\\"biId\\\\\\":12},\\\\\\"biId\\\\\\":7},\\\\\\"biId\\\\\\":6}],\\\\\\"directives\\\\\\":[],\\\\\\"biId\\\\\\":5},\\\\\\"biId\\\\\\":2},{\\\\\\"type\\\\\\":\\\\\\"VariableDeclaration\\\\\\",\\\\\\"start\\\\\\":58,\\\\\\"end\\\\\\":80,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":0},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":22}},\\\\\\"declarations\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"VariableDeclarator\\\\\\",\\\\\\"start\\\\\\":64,\\\\\\"end\\\\\\":79,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":21}},\\\\\\"id\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":64,\\\\\\"end\\\\\\":70,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":12},\\\\\\"identifierName\\\\\\":\\\\\\"result\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"result\\\\\\",\\\\\\"biId\\\\\\":21},\\\\\\"init\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"CallExpression\\\\\\",\\\\\\"start\\\\\\":73,\\\\\\"end\\\\\\":79,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":15},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":21}},\\\\\\"callee\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":73,\\\\\\"end\\\\\\":76,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":15},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":18},\\\\\\"identifierName\\\\\\":\\\\\\"fac\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"fac\\\\\\",\\\\\\"biId\\\\\\":23},\\\\\\"arguments\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":77,\\\\\\"end\\\\\\":78,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":19},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":20}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":3,\\\\\\"raw\\\\\\":\\\\\\"3\\\\\\"},\\\\\\"value\\\\\\":3,\\\\\\"biId\\\\\\":24}],\\\\\\"biId\\\\\\":22},\\\\\\"biId\\\\\\":20}],\\\\\\"kind\\\\\\":\\\\\\"const\\\\\\",\\\\\\"biId\\\\\\":19}],\\\\\\"directives\\\\\\":[],\\\\\\"biId\\\\\\":1}\\"));

function fac(n) {
  const _fnStartId = tracer.logFnStart(2, {
    n,
    this: this,
    arguments: arguments
  });

  try {
    {
      return tracer.logFnRet(6, tracer.logExpr(7, tracer.logExpr(8, tracer.logExpr(9, n) == tracer.logExpr(10, 1)) ? tracer.logExpr(11, 1) : tracer.logExpr(12, tracer.logExpr(13, n) * tracer.logExpr(14, tracer.logExpr(15, fac)(tracer.logExpr(16, tracer.logExpr(17, n) - tracer.logExpr(18, 1)))))));
    }
  } catch (e) {
    tracer.logFnThrow(2, e);
    throw e;
  }

  tracer.logFnRet(2, undefined);
}

const result = tracer.logExpr(22, tracer.logExpr(23, fac)(tracer.logExpr(24, 3)));"
`;

exports[`demo examples factorial 2`] = `
Array [
  Object {
    "astId": "test",
    "data": Object {
      ".length": Object {
        "configurable": true,
        "type": "property",
        "value": 1,
      },
      ".name": Object {
        "configurable": true,
        "type": "property",
        "value": "fac",
      },
      ".prototype": Object {
        "type": "property",
        "value": Object {
          ".constructor": Object {
            "configurable": true,
            "type": "property",
            "value": Object {
              "id": "1",
              "type": "ref",
            },
            "writable": true,
          },
          "id": "2",
          "type": "object",
        },
        "writable": true,
      },
      "id": "1",
      "source": "function fac(n) {
  const _fnStartId = tracer.logFnStart(2, {
    n,
    this: this,
    arguments: arguments
  });

  try {
    {
      return tracer.logFnRet(6, tracer.logExpr(7, tracer.logExpr(8, tracer.logExpr(9, n) == tracer.logExpr(10, 1)) ? tracer.logExpr(11, 1) : tracer.logExpr(12, tracer.logExpr(13, n) * tracer.logExpr(14, tracer.logExpr(15, fac)(tracer.logExpr(16, tracer.logExpr(17, n) - tracer.logExpr(18, 1)))))));
    }
  } catch (e) {
    tracer.logFnThrow(2, e);
    throw e;
  }

  tracer.logFnRet(2, undefined);
}",
      "type": "function",
    },
    "id": 1,
    "nodeId": 23,
    "parentId": undefined,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 2,
    "nodeId": 24,
    "parentId": undefined,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".arguments": Object {
        ".0": 3,
        ".callee": Object {
          "get": Object {
            ".length": Object {
              "type": "property",
              "value": 0,
            },
            "id": "5",
            "source": "function () { [native code] }",
            "type": "function",
          },
          "set": Object {
            "id": "5",
            "type": "ref",
          },
          "type": "property",
        },
        ".length": Object {
          "configurable": true,
          "type": "property",
          "value": 1,
          "writable": true,
        },
        "@Symbol.iterator": Object {
          "configurable": true,
          "type": "property",
          "value": Object {
            ".length": Object {
              "configurable": true,
              "type": "property",
              "value": 0,
            },
            ".name": Object {
              "configurable": true,
              "type": "property",
              "value": "values",
            },
            "id": "6",
            "source": "function values() { [native code] }",
            "type": "function",
          },
          "writable": true,
        },
        "id": "4",
        "type": "object",
      },
      ".n": 3,
      ".this": Object {
        "name": "undefined",
        "type": "builtin",
      },
      "id": "3",
      "type": "object",
    },
    "id": 3,
    "nodeId": 2,
    "parentId": undefined,
    "type": "fn-start",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 4,
    "nodeId": 9,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 5,
    "nodeId": 10,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": false,
    "id": 6,
    "nodeId": 8,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 7,
    "nodeId": 13,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".length": Object {
        "configurable": true,
        "type": "property",
        "value": 1,
      },
      ".name": Object {
        "configurable": true,
        "type": "property",
        "value": "fac",
      },
      ".prototype": Object {
        "type": "property",
        "value": Object {
          ".constructor": Object {
            "configurable": true,
            "type": "property",
            "value": Object {
              "id": "1",
              "type": "ref",
            },
            "writable": true,
          },
          "id": "2",
          "type": "object",
        },
        "writable": true,
      },
      "id": "1",
      "source": "function fac(n) {
  const _fnStartId = tracer.logFnStart(2, {
    n,
    this: this,
    arguments: arguments
  });

  try {
    {
      return tracer.logFnRet(6, tracer.logExpr(7, tracer.logExpr(8, tracer.logExpr(9, n) == tracer.logExpr(10, 1)) ? tracer.logExpr(11, 1) : tracer.logExpr(12, tracer.logExpr(13, n) * tracer.logExpr(14, tracer.logExpr(15, fac)(tracer.logExpr(16, tracer.logExpr(17, n) - tracer.logExpr(18, 1)))))));
    }
  } catch (e) {
    tracer.logFnThrow(2, e);
    throw e;
  }

  tracer.logFnRet(2, undefined);
}",
      "type": "function",
    },
    "id": 8,
    "nodeId": 15,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 9,
    "nodeId": 17,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 10,
    "nodeId": 18,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 11,
    "nodeId": 16,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".arguments": Object {
        ".0": 2,
        ".callee": Object {
          "get": Object {
            ".length": Object {
              "type": "property",
              "value": 0,
            },
            "id": "5",
            "source": "function () { [native code] }",
            "type": "function",
          },
          "set": Object {
            "id": "5",
            "type": "ref",
          },
          "type": "property",
        },
        ".length": Object {
          "configurable": true,
          "type": "property",
          "value": 1,
          "writable": true,
        },
        "@Symbol.iterator": Object {
          "configurable": true,
          "type": "property",
          "value": Object {
            ".length": Object {
              "configurable": true,
              "type": "property",
              "value": 0,
            },
            ".name": Object {
              "configurable": true,
              "type": "property",
              "value": "values",
            },
            "id": "6",
            "source": "function values() { [native code] }",
            "type": "function",
          },
          "writable": true,
        },
        "id": "8",
        "type": "object",
      },
      ".n": 2,
      ".this": Object {
        "name": "undefined",
        "type": "builtin",
      },
      "id": "7",
      "type": "object",
    },
    "id": 12,
    "nodeId": 2,
    "parentId": 3,
    "type": "fn-start",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 13,
    "nodeId": 9,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 14,
    "nodeId": 10,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": false,
    "id": 15,
    "nodeId": 8,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 16,
    "nodeId": 13,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".length": Object {
        "configurable": true,
        "type": "property",
        "value": 1,
      },
      ".name": Object {
        "configurable": true,
        "type": "property",
        "value": "fac",
      },
      ".prototype": Object {
        "type": "property",
        "value": Object {
          ".constructor": Object {
            "configurable": true,
            "type": "property",
            "value": Object {
              "id": "1",
              "type": "ref",
            },
            "writable": true,
          },
          "id": "2",
          "type": "object",
        },
        "writable": true,
      },
      "id": "1",
      "source": "function fac(n) {
  const _fnStartId = tracer.logFnStart(2, {
    n,
    this: this,
    arguments: arguments
  });

  try {
    {
      return tracer.logFnRet(6, tracer.logExpr(7, tracer.logExpr(8, tracer.logExpr(9, n) == tracer.logExpr(10, 1)) ? tracer.logExpr(11, 1) : tracer.logExpr(12, tracer.logExpr(13, n) * tracer.logExpr(14, tracer.logExpr(15, fac)(tracer.logExpr(16, tracer.logExpr(17, n) - tracer.logExpr(18, 1)))))));
    }
  } catch (e) {
    tracer.logFnThrow(2, e);
    throw e;
  }

  tracer.logFnRet(2, undefined);
}",
      "type": "function",
    },
    "id": 17,
    "nodeId": 15,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 18,
    "nodeId": 17,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 19,
    "nodeId": 18,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 20,
    "nodeId": 16,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".arguments": Object {
        ".0": 1,
        ".callee": Object {
          "get": Object {
            ".length": Object {
              "type": "property",
              "value": 0,
            },
            "id": "5",
            "source": "function () { [native code] }",
            "type": "function",
          },
          "set": Object {
            "id": "5",
            "type": "ref",
          },
          "type": "property",
        },
        ".length": Object {
          "configurable": true,
          "type": "property",
          "value": 1,
          "writable": true,
        },
        "@Symbol.iterator": Object {
          "configurable": true,
          "type": "property",
          "value": Object {
            ".length": Object {
              "configurable": true,
              "type": "property",
              "value": 0,
            },
            ".name": Object {
              "configurable": true,
              "type": "property",
              "value": "values",
            },
            "id": "6",
            "source": "function values() { [native code] }",
            "type": "function",
          },
          "writable": true,
        },
        "id": "10",
        "type": "object",
      },
      ".n": 1,
      ".this": Object {
        "name": "undefined",
        "type": "builtin",
      },
      "id": "9",
      "type": "object",
    },
    "id": 21,
    "nodeId": 2,
    "parentId": 12,
    "type": "fn-start",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 22,
    "nodeId": 9,
    "parentId": 21,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 23,
    "nodeId": 10,
    "parentId": 21,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 24,
    "nodeId": 8,
    "parentId": 21,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 25,
    "nodeId": 11,
    "parentId": 21,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 26,
    "nodeId": 7,
    "parentId": 21,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 27,
    "nodeId": 6,
    "parentId": 21,
    "type": "fn-ret",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 28,
    "nodeId": 14,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 29,
    "nodeId": 12,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 30,
    "nodeId": 7,
    "parentId": 12,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 31,
    "nodeId": 6,
    "parentId": 12,
    "type": "fn-ret",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 32,
    "nodeId": 14,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 6,
    "id": 33,
    "nodeId": 12,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 6,
    "id": 34,
    "nodeId": 7,
    "parentId": 3,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 6,
    "id": 35,
    "nodeId": 6,
    "parentId": 3,
    "type": "fn-ret",
  },
  Object {
    "astId": "test",
    "data": 6,
    "id": 36,
    "nodeId": 22,
    "parentId": undefined,
    "type": "expr",
  },
]
`;

exports[`demo examples insertionSort 1`] = `
"tracer.registerAST(JSON.parse(\\"{\\\\\\"type\\\\\\":\\\\\\"Program\\\\\\",\\\\\\"start\\\\\\":0,\\\\\\"end\\\\\\":318,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":0},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":16,\\\\\\"column\\\\\\":17}},\\\\\\"sourceType\\\\\\":\\\\\\"module\\\\\\",\\\\\\"interpreter\\\\\\":null,\\\\\\"body\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"FunctionDeclaration\\\\\\",\\\\\\"start\\\\\\":0,\\\\\\"end\\\\\\":272,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":0},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":13,\\\\\\"column\\\\\\":1}},\\\\\\"id\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":9,\\\\\\"end\\\\\\":22,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":9},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":22},\\\\\\"identifierName\\\\\\":\\\\\\"insertionSort\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"insertionSort\\\\\\",\\\\\\"biId\\\\\\":3},\\\\\\"generator\\\\\\":false,\\\\\\"async\\\\\\":false,\\\\\\"params\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":23,\\\\\\"end\\\\\\":28,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":23},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":28},\\\\\\"identifierName\\\\\\":\\\\\\"array\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"array\\\\\\",\\\\\\"biId\\\\\\":4}],\\\\\\"body\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BlockStatement\\\\\\",\\\\\\"start\\\\\\":30,\\\\\\"end\\\\\\":272,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":1,\\\\\\"column\\\\\\":30},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":13,\\\\\\"column\\\\\\":1}},\\\\\\"body\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"ForStatement\\\\\\",\\\\\\"start\\\\\\":34,\\\\\\"end\\\\\\":270,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":2},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":12,\\\\\\"column\\\\\\":3}},\\\\\\"init\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"VariableDeclaration\\\\\\",\\\\\\"start\\\\\\":39,\\\\\\"end\\\\\\":48,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":7},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":16}},\\\\\\"declarations\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"VariableDeclarator\\\\\\",\\\\\\"start\\\\\\":43,\\\\\\"end\\\\\\":48,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":11},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":16}},\\\\\\"id\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":43,\\\\\\"end\\\\\\":44,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":11},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":12},\\\\\\"identifierName\\\\\\":\\\\\\"i\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"i\\\\\\",\\\\\\"biId\\\\\\":9},\\\\\\"init\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":47,\\\\\\"end\\\\\\":48,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":15},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":16}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":0,\\\\\\"raw\\\\\\":\\\\\\"0\\\\\\"},\\\\\\"value\\\\\\":0,\\\\\\"biId\\\\\\":10},\\\\\\"biId\\\\\\":8}],\\\\\\"kind\\\\\\":\\\\\\"let\\\\\\",\\\\\\"biId\\\\\\":7},\\\\\\"test\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BinaryExpression\\\\\\",\\\\\\"start\\\\\\":50,\\\\\\"end\\\\\\":66,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":18},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":34}},\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":50,\\\\\\"end\\\\\\":51,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":18},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":19},\\\\\\"identifierName\\\\\\":\\\\\\"i\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"i\\\\\\",\\\\\\"biId\\\\\\":12},\\\\\\"operator\\\\\\":\\\\\\"<\\\\\\",\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"MemberExpression\\\\\\",\\\\\\"start\\\\\\":54,\\\\\\"end\\\\\\":66,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":22},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":34}},\\\\\\"object\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":54,\\\\\\"end\\\\\\":59,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":22},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":27},\\\\\\"identifierName\\\\\\":\\\\\\"array\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"array\\\\\\",\\\\\\"biId\\\\\\":14},\\\\\\"property\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":60,\\\\\\"end\\\\\\":66,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":28},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":34},\\\\\\"identifierName\\\\\\":\\\\\\"length\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"length\\\\\\",\\\\\\"biId\\\\\\":15},\\\\\\"computed\\\\\\":false,\\\\\\"biId\\\\\\":13},\\\\\\"biId\\\\\\":11},\\\\\\"update\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"UpdateExpression\\\\\\",\\\\\\"start\\\\\\":68,\\\\\\"end\\\\\\":71,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":36},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":39}},\\\\\\"operator\\\\\\":\\\\\\"++\\\\\\",\\\\\\"prefix\\\\\\":false,\\\\\\"argument\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":68,\\\\\\"end\\\\\\":69,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":36},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":37},\\\\\\"identifierName\\\\\\":\\\\\\"i\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"i\\\\\\",\\\\\\"biId\\\\\\":17},\\\\\\"biId\\\\\\":16},\\\\\\"body\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BlockStatement\\\\\\",\\\\\\"start\\\\\\":73,\\\\\\"end\\\\\\":270,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":2,\\\\\\"column\\\\\\":41},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":12,\\\\\\"column\\\\\\":3}},\\\\\\"body\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"ForStatement\\\\\\",\\\\\\"start\\\\\\":79,\\\\\\"end\\\\\\":266,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":4},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":11,\\\\\\"column\\\\\\":5}},\\\\\\"init\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"VariableDeclaration\\\\\\",\\\\\\"start\\\\\\":84,\\\\\\"end\\\\\\":97,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":9},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":22}},\\\\\\"declarations\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"VariableDeclarator\\\\\\",\\\\\\"start\\\\\\":88,\\\\\\"end\\\\\\":97,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":13},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":22}},\\\\\\"id\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":88,\\\\\\"end\\\\\\":89,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":13},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":14},\\\\\\"identifierName\\\\\\":\\\\\\"j\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"j\\\\\\",\\\\\\"biId\\\\\\":22},\\\\\\"init\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BinaryExpression\\\\\\",\\\\\\"start\\\\\\":92,\\\\\\"end\\\\\\":97,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":17},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":22}},\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":92,\\\\\\"end\\\\\\":93,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":17},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":18},\\\\\\"identifierName\\\\\\":\\\\\\"i\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"i\\\\\\",\\\\\\"biId\\\\\\":24},\\\\\\"operator\\\\\\":\\\\\\"-\\\\\\",\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":96,\\\\\\"end\\\\\\":97,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":21},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":22}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":1,\\\\\\"raw\\\\\\":\\\\\\"1\\\\\\"},\\\\\\"value\\\\\\":1,\\\\\\"biId\\\\\\":25},\\\\\\"biId\\\\\\":23},\\\\\\"biId\\\\\\":21}],\\\\\\"kind\\\\\\":\\\\\\"let\\\\\\",\\\\\\"biId\\\\\\":20},\\\\\\"test\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BinaryExpression\\\\\\",\\\\\\"start\\\\\\":99,\\\\\\"end\\\\\\":105,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":24},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":30}},\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":99,\\\\\\"end\\\\\\":100,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":24},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":25},\\\\\\"identifierName\\\\\\":\\\\\\"j\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"j\\\\\\",\\\\\\"biId\\\\\\":27},\\\\\\"operator\\\\\\":\\\\\\">=\\\\\\",\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":104,\\\\\\"end\\\\\\":105,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":29},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":30}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":0,\\\\\\"raw\\\\\\":\\\\\\"0\\\\\\"},\\\\\\"value\\\\\\":0,\\\\\\"biId\\\\\\":28},\\\\\\"biId\\\\\\":26},\\\\\\"update\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"UpdateExpression\\\\\\",\\\\\\"start\\\\\\":107,\\\\\\"end\\\\\\":110,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":32},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":35}},\\\\\\"operator\\\\\\":\\\\\\"--\\\\\\",\\\\\\"prefix\\\\\\":false,\\\\\\"argument\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":107,\\\\\\"end\\\\\\":108,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":32},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":33},\\\\\\"identifierName\\\\\\":\\\\\\"j\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"j\\\\\\",\\\\\\"biId\\\\\\":30},\\\\\\"biId\\\\\\":29},\\\\\\"body\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BlockStatement\\\\\\",\\\\\\"start\\\\\\":112,\\\\\\"end\\\\\\":266,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":3,\\\\\\"column\\\\\\":37},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":11,\\\\\\"column\\\\\\":5}},\\\\\\"body\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"IfStatement\\\\\\",\\\\\\"start\\\\\\":120,\\\\\\"end\\\\\\":174,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":6,\\\\\\"column\\\\\\":7}},\\\\\\"test\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BinaryExpression\\\\\\",\\\\\\"start\\\\\\":124,\\\\\\"end\\\\\\":148,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":10},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":34}},\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"MemberExpression\\\\\\",\\\\\\"start\\\\\\":124,\\\\\\"end\\\\\\":132,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":10},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":18}},\\\\\\"object\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":124,\\\\\\"end\\\\\\":129,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":10},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":15},\\\\\\"identifierName\\\\\\":\\\\\\"array\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"array\\\\\\",\\\\\\"biId\\\\\\":35},\\\\\\"property\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":130,\\\\\\"end\\\\\\":131,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":16},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":17},\\\\\\"identifierName\\\\\\":\\\\\\"j\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"j\\\\\\",\\\\\\"biId\\\\\\":36},\\\\\\"computed\\\\\\":true,\\\\\\"biId\\\\\\":34},\\\\\\"operator\\\\\\":\\\\\\"<=\\\\\\",\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"MemberExpression\\\\\\",\\\\\\"start\\\\\\":136,\\\\\\"end\\\\\\":148,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":22},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":34}},\\\\\\"object\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":136,\\\\\\"end\\\\\\":141,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":22},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":27},\\\\\\"identifierName\\\\\\":\\\\\\"array\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"array\\\\\\",\\\\\\"biId\\\\\\":38},\\\\\\"property\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BinaryExpression\\\\\\",\\\\\\"start\\\\\\":142,\\\\\\"end\\\\\\":147,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":28},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":33}},\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":142,\\\\\\"end\\\\\\":143,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":28},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":29},\\\\\\"identifierName\\\\\\":\\\\\\"j\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"j\\\\\\",\\\\\\"biId\\\\\\":40},\\\\\\"operator\\\\\\":\\\\\\"+\\\\\\",\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":146,\\\\\\"end\\\\\\":147,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":32},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":33}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":1,\\\\\\"raw\\\\\\":\\\\\\"1\\\\\\"},\\\\\\"value\\\\\\":1,\\\\\\"biId\\\\\\":41},\\\\\\"biId\\\\\\":39},\\\\\\"computed\\\\\\":true,\\\\\\"biId\\\\\\":37},\\\\\\"biId\\\\\\":33},\\\\\\"consequent\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BlockStatement\\\\\\",\\\\\\"start\\\\\\":150,\\\\\\"end\\\\\\":174,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":4,\\\\\\"column\\\\\\":36},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":6,\\\\\\"column\\\\\\":7}},\\\\\\"body\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"BreakStatement\\\\\\",\\\\\\"start\\\\\\":160,\\\\\\"end\\\\\\":166,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":5,\\\\\\"column\\\\\\":8},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":5,\\\\\\"column\\\\\\":14}},\\\\\\"label\\\\\\":null,\\\\\\"biId\\\\\\":43}],\\\\\\"directives\\\\\\":[],\\\\\\"biId\\\\\\":42},\\\\\\"alternate\\\\\\":null,\\\\\\"biId\\\\\\":32},{\\\\\\"type\\\\\\":\\\\\\"VariableDeclaration\\\\\\",\\\\\\"start\\\\\\":182,\\\\\\"end\\\\\\":207,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":31}},\\\\\\"declarations\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"VariableDeclarator\\\\\\",\\\\\\"start\\\\\\":188,\\\\\\"end\\\\\\":206,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":12},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":30}},\\\\\\"id\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":188,\\\\\\"end\\\\\\":191,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":12},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":15},\\\\\\"identifierName\\\\\\":\\\\\\"tmp\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"tmp\\\\\\",\\\\\\"biId\\\\\\":46},\\\\\\"init\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"MemberExpression\\\\\\",\\\\\\"start\\\\\\":194,\\\\\\"end\\\\\\":206,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":18},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":30}},\\\\\\"object\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":194,\\\\\\"end\\\\\\":199,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":18},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":23},\\\\\\"identifierName\\\\\\":\\\\\\"array\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"array\\\\\\",\\\\\\"biId\\\\\\":48},\\\\\\"property\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BinaryExpression\\\\\\",\\\\\\"start\\\\\\":200,\\\\\\"end\\\\\\":205,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":24},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":29}},\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":200,\\\\\\"end\\\\\\":201,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":24},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":25},\\\\\\"identifierName\\\\\\":\\\\\\"j\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"j\\\\\\",\\\\\\"biId\\\\\\":50},\\\\\\"operator\\\\\\":\\\\\\"+\\\\\\",\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":204,\\\\\\"end\\\\\\":205,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":28},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":8,\\\\\\"column\\\\\\":29}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":1,\\\\\\"raw\\\\\\":\\\\\\"1\\\\\\"},\\\\\\"value\\\\\\":1,\\\\\\"biId\\\\\\":51},\\\\\\"biId\\\\\\":49},\\\\\\"computed\\\\\\":true,\\\\\\"biId\\\\\\":47},\\\\\\"biId\\\\\\":45}],\\\\\\"kind\\\\\\":\\\\\\"const\\\\\\",\\\\\\"biId\\\\\\":44},{\\\\\\"type\\\\\\":\\\\\\"ExpressionStatement\\\\\\",\\\\\\"start\\\\\\":214,\\\\\\"end\\\\\\":238,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":30}},\\\\\\"expression\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"AssignmentExpression\\\\\\",\\\\\\"start\\\\\\":214,\\\\\\"end\\\\\\":237,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":29}},\\\\\\"operator\\\\\\":\\\\\\"=\\\\\\",\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"MemberExpression\\\\\\",\\\\\\"start\\\\\\":214,\\\\\\"end\\\\\\":226,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":18}},\\\\\\"object\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":214,\\\\\\"end\\\\\\":219,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":11},\\\\\\"identifierName\\\\\\":\\\\\\"array\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"array\\\\\\",\\\\\\"biId\\\\\\":55},\\\\\\"property\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"BinaryExpression\\\\\\",\\\\\\"start\\\\\\":220,\\\\\\"end\\\\\\":225,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":12},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":17}},\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":220,\\\\\\"end\\\\\\":221,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":12},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":13},\\\\\\"identifierName\\\\\\":\\\\\\"j\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"j\\\\\\",\\\\\\"biId\\\\\\":57},\\\\\\"operator\\\\\\":\\\\\\"+\\\\\\",\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":224,\\\\\\"end\\\\\\":225,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":16},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":17}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":1,\\\\\\"raw\\\\\\":\\\\\\"1\\\\\\"},\\\\\\"value\\\\\\":1,\\\\\\"biId\\\\\\":58},\\\\\\"biId\\\\\\":56},\\\\\\"computed\\\\\\":true,\\\\\\"biId\\\\\\":54},\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"MemberExpression\\\\\\",\\\\\\"start\\\\\\":229,\\\\\\"end\\\\\\":237,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":21},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":29}},\\\\\\"object\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":229,\\\\\\"end\\\\\\":234,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":21},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":26},\\\\\\"identifierName\\\\\\":\\\\\\"array\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"array\\\\\\",\\\\\\"biId\\\\\\":60},\\\\\\"property\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":235,\\\\\\"end\\\\\\":236,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":27},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":9,\\\\\\"column\\\\\\":28},\\\\\\"identifierName\\\\\\":\\\\\\"j\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"j\\\\\\",\\\\\\"biId\\\\\\":61},\\\\\\"computed\\\\\\":true,\\\\\\"biId\\\\\\":59},\\\\\\"biId\\\\\\":53},\\\\\\"biId\\\\\\":52},{\\\\\\"type\\\\\\":\\\\\\"ExpressionStatement\\\\\\",\\\\\\"start\\\\\\":245,\\\\\\"end\\\\\\":260,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":21}},\\\\\\"expression\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"AssignmentExpression\\\\\\",\\\\\\"start\\\\\\":245,\\\\\\"end\\\\\\":259,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":20}},\\\\\\"operator\\\\\\":\\\\\\"=\\\\\\",\\\\\\"left\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"MemberExpression\\\\\\",\\\\\\"start\\\\\\":245,\\\\\\"end\\\\\\":253,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":14}},\\\\\\"object\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":245,\\\\\\"end\\\\\\":250,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":11},\\\\\\"identifierName\\\\\\":\\\\\\"array\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"array\\\\\\",\\\\\\"biId\\\\\\":65},\\\\\\"property\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":251,\\\\\\"end\\\\\\":252,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":12},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":13},\\\\\\"identifierName\\\\\\":\\\\\\"j\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"j\\\\\\",\\\\\\"biId\\\\\\":66},\\\\\\"computed\\\\\\":true,\\\\\\"biId\\\\\\":64},\\\\\\"right\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":256,\\\\\\"end\\\\\\":259,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":17},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":10,\\\\\\"column\\\\\\":20},\\\\\\"identifierName\\\\\\":\\\\\\"tmp\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"tmp\\\\\\",\\\\\\"biId\\\\\\":67},\\\\\\"biId\\\\\\":63},\\\\\\"biId\\\\\\":62}],\\\\\\"directives\\\\\\":[],\\\\\\"biId\\\\\\":31},\\\\\\"biId\\\\\\":19}],\\\\\\"directives\\\\\\":[],\\\\\\"biId\\\\\\":18},\\\\\\"biId\\\\\\":6}],\\\\\\"directives\\\\\\":[],\\\\\\"biId\\\\\\":5},\\\\\\"biId\\\\\\":2},{\\\\\\"type\\\\\\":\\\\\\"VariableDeclaration\\\\\\",\\\\\\"start\\\\\\":274,\\\\\\"end\\\\\\":300,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":0},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":26}},\\\\\\"declarations\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"VariableDeclarator\\\\\\",\\\\\\"start\\\\\\":280,\\\\\\"end\\\\\\":299,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":25}},\\\\\\"id\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":280,\\\\\\"end\\\\\\":281,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":6},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":7},\\\\\\"identifierName\\\\\\":\\\\\\"a\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"a\\\\\\",\\\\\\"biId\\\\\\":70},\\\\\\"init\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"ArrayExpression\\\\\\",\\\\\\"start\\\\\\":284,\\\\\\"end\\\\\\":299,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":10},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":25}},\\\\\\"elements\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":285,\\\\\\"end\\\\\\":286,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":11},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":12}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":3,\\\\\\"raw\\\\\\":\\\\\\"3\\\\\\"},\\\\\\"value\\\\\\":3,\\\\\\"biId\\\\\\":72},{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":288,\\\\\\"end\\\\\\":289,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":14},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":15}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":1,\\\\\\"raw\\\\\\":\\\\\\"1\\\\\\"},\\\\\\"value\\\\\\":1,\\\\\\"biId\\\\\\":73},{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":291,\\\\\\"end\\\\\\":292,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":17},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":18}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":2,\\\\\\"raw\\\\\\":\\\\\\"2\\\\\\"},\\\\\\"value\\\\\\":2,\\\\\\"biId\\\\\\":74},{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":294,\\\\\\"end\\\\\\":295,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":20},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":21}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":5,\\\\\\"raw\\\\\\":\\\\\\"5\\\\\\"},\\\\\\"value\\\\\\":5,\\\\\\"biId\\\\\\":75},{\\\\\\"type\\\\\\":\\\\\\"NumericLiteral\\\\\\",\\\\\\"start\\\\\\":297,\\\\\\"end\\\\\\":298,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":23},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":15,\\\\\\"column\\\\\\":24}},\\\\\\"extra\\\\\\":{\\\\\\"rawValue\\\\\\":4,\\\\\\"raw\\\\\\":\\\\\\"4\\\\\\"},\\\\\\"value\\\\\\":4,\\\\\\"biId\\\\\\":76}],\\\\\\"biId\\\\\\":71},\\\\\\"biId\\\\\\":69}],\\\\\\"kind\\\\\\":\\\\\\"const\\\\\\",\\\\\\"biId\\\\\\":68},{\\\\\\"type\\\\\\":\\\\\\"ExpressionStatement\\\\\\",\\\\\\"start\\\\\\":301,\\\\\\"end\\\\\\":318,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":16,\\\\\\"column\\\\\\":0},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":16,\\\\\\"column\\\\\\":17}},\\\\\\"expression\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"CallExpression\\\\\\",\\\\\\"start\\\\\\":301,\\\\\\"end\\\\\\":317,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":16,\\\\\\"column\\\\\\":0},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":16,\\\\\\"column\\\\\\":16}},\\\\\\"callee\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":301,\\\\\\"end\\\\\\":314,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":16,\\\\\\"column\\\\\\":0},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":16,\\\\\\"column\\\\\\":13},\\\\\\"identifierName\\\\\\":\\\\\\"insertionSort\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"insertionSort\\\\\\",\\\\\\"biId\\\\\\":79},\\\\\\"arguments\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"Identifier\\\\\\",\\\\\\"start\\\\\\":315,\\\\\\"end\\\\\\":316,\\\\\\"loc\\\\\\":{\\\\\\"start\\\\\\":{\\\\\\"line\\\\\\":16,\\\\\\"column\\\\\\":14},\\\\\\"end\\\\\\":{\\\\\\"line\\\\\\":16,\\\\\\"column\\\\\\":15},\\\\\\"identifierName\\\\\\":\\\\\\"a\\\\\\"},\\\\\\"name\\\\\\":\\\\\\"a\\\\\\",\\\\\\"biId\\\\\\":80}],\\\\\\"biId\\\\\\":78},\\\\\\"biId\\\\\\":77}],\\\\\\"directives\\\\\\":[],\\\\\\"biId\\\\\\":1}\\"));

function insertionSort(array) {
  const _fnStartId = tracer.logFnStart(2, {
    array,
    this: this,
    arguments: arguments
  });

  try {
    {
      for (let i = tracer.logExpr(10, 0); tracer.logExpr(11, tracer.logExpr(12, i) < tracer.logExpr(13, tracer.logExpr(14, array).length)); tracer.logExpr(16, (() => {
        const _postfix = tracer.logExpr(17, i);

        i += 1;
        return _postfix;
      })())) {
        for (let j = tracer.logExpr(23, tracer.logExpr(24, i) - tracer.logExpr(25, 1)); tracer.logExpr(26, tracer.logExpr(27, j) >= tracer.logExpr(28, 0)); tracer.logExpr(29, (() => {
          const _postfix2 = tracer.logExpr(30, j);

          j -= 1;
          return _postfix2;
        })())) {
          if (tracer.logExpr(33, tracer.logExpr(34, tracer.logExpr(35, array)[tracer.logExpr(36, j)]) <= tracer.logExpr(37, tracer.logExpr(38, array)[tracer.logExpr(39, tracer.logExpr(40, j) + tracer.logExpr(41, 1))]))) {
            break;
          }

          const tmp = tracer.logExpr(47, tracer.logExpr(48, array)[tracer.logExpr(49, tracer.logExpr(50, j) + tracer.logExpr(51, 1))]);
          tracer.logExpr(53, tracer.logExpr(55, array)[tracer.logExpr(56, tracer.logExpr(57, j) + tracer.logExpr(58, 1))] = tracer.logExpr(59, tracer.logExpr(60, array)[tracer.logExpr(61, j)]));
          tracer.logExpr(63, tracer.logExpr(65, array)[tracer.logExpr(66, j)] = tracer.logExpr(67, tmp));
        }
      }
    }
  } catch (e) {
    tracer.logFnThrow(2, e);
    throw e;
  }

  tracer.logFnRet(2, undefined);
}

const a = tracer.logExpr(71, [tracer.logExpr(72, 3), tracer.logExpr(73, 1), tracer.logExpr(74, 2), tracer.logExpr(75, 5), tracer.logExpr(76, 4)]);
tracer.logExpr(78, tracer.logExpr(79, insertionSort)(tracer.logExpr(80, a)));"
`;

exports[`demo examples insertionSort 2`] = `
Array [
  Object {
    "astId": "test",
    "data": 3,
    "id": 1,
    "nodeId": 72,
    "parentId": undefined,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 2,
    "nodeId": 73,
    "parentId": undefined,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 3,
    "nodeId": 74,
    "parentId": undefined,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 4,
    "nodeId": 75,
    "parentId": undefined,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 5,
    "nodeId": 76,
    "parentId": undefined,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 3,
      ".1": 1,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 6,
    "nodeId": 71,
    "parentId": undefined,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".length": Object {
        "configurable": true,
        "type": "property",
        "value": 1,
      },
      ".name": Object {
        "configurable": true,
        "type": "property",
        "value": "insertionSort",
      },
      ".prototype": Object {
        "type": "property",
        "value": Object {
          ".constructor": Object {
            "configurable": true,
            "type": "property",
            "value": Object {
              "id": "2",
              "type": "ref",
            },
            "writable": true,
          },
          "id": "3",
          "type": "object",
        },
        "writable": true,
      },
      "id": "2",
      "source": "function insertionSort(array) {
  const _fnStartId = tracer.logFnStart(2, {
    array,
    this: this,
    arguments: arguments
  });

  try {
    {
      for (let i = tracer.logExpr(10, 0); tracer.logExpr(11, tracer.logExpr(12, i) < tracer.logExpr(13, tracer.logExpr(14, array).length)); tracer.logExpr(16, (() => {
        const _postfix = tracer.logExpr(17, i);

        i += 1;
        return _postfix;
      })())) {
        for (let j = tracer.logExpr(23, tracer.logExpr(24, i) - tracer.logExpr(25, 1)); tracer.logExpr(26, tracer.logExpr(27, j) >= tracer.logExpr(28, 0)); tracer.logExpr(29, (() => {
          const _postfix2 = tracer.logExpr(30, j);

          j -= 1;
          return _postfix2;
        })())) {
          if (tracer.logExpr(33, tracer.logExpr(34, tracer.logExpr(35, array)[tracer.logExpr(36, j)]) <= tracer.logExpr(37, tracer.logExpr(38, array)[tracer.logExpr(39, tracer.logExpr(40, j) + tracer.logExpr(41, 1))]))) {
            break;
          }

          const tmp = tracer.logExpr(47, tracer.logExpr(48, array)[tracer.logExpr(49, tracer.logExpr(50, j) + tracer.logExpr(51, 1))]);
          tracer.logExpr(53, tracer.logExpr(55, array)[tracer.logExpr(56, tracer.logExpr(57, j) + tracer.logExpr(58, 1))] = tracer.logExpr(59, tracer.logExpr(60, array)[tracer.logExpr(61, j)]));
          tracer.logExpr(63, tracer.logExpr(65, array)[tracer.logExpr(66, j)] = tracer.logExpr(67, tmp));
        }
      }
    }
  } catch (e) {
    tracer.logFnThrow(2, e);
    throw e;
  }

  tracer.logFnRet(2, undefined);
}",
      "type": "function",
    },
    "id": 7,
    "nodeId": 79,
    "parentId": undefined,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 3,
      ".1": 1,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 8,
    "nodeId": 80,
    "parentId": undefined,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".arguments": Object {
        ".0": Object {
          "id": "1",
          "type": "ref",
        },
        ".callee": Object {
          "get": Object {
            ".length": Object {
              "type": "property",
              "value": 0,
            },
            "id": "6",
            "source": "function () { [native code] }",
            "type": "function",
          },
          "set": Object {
            "id": "6",
            "type": "ref",
          },
          "type": "property",
        },
        ".length": Object {
          "configurable": true,
          "type": "property",
          "value": 1,
          "writable": true,
        },
        "@Symbol.iterator": Object {
          "configurable": true,
          "type": "property",
          "value": Object {
            ".length": Object {
              "configurable": true,
              "type": "property",
              "value": 0,
            },
            ".name": Object {
              "configurable": true,
              "type": "property",
              "value": "values",
            },
            "id": "7",
            "source": "function values() { [native code] }",
            "type": "function",
          },
          "writable": true,
        },
        "id": "5",
        "type": "object",
      },
      ".array": Object {
        ".0": 3,
        ".1": 1,
        ".2": 2,
        ".3": 5,
        ".4": 4,
        "id": "1",
        "type": "array",
      },
      ".this": Object {
        "name": "undefined",
        "type": "builtin",
      },
      "id": "4",
      "type": "object",
    },
    "id": 9,
    "nodeId": 2,
    "parentId": undefined,
    "type": "fn-start",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 10,
    "nodeId": 10,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 11,
    "nodeId": 12,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 3,
      ".1": 1,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 12,
    "nodeId": 14,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 13,
    "nodeId": 13,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 14,
    "nodeId": 11,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 15,
    "nodeId": 24,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 16,
    "nodeId": 25,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": -1,
    "id": 17,
    "nodeId": 23,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": -1,
    "id": 18,
    "nodeId": 27,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 19,
    "nodeId": 28,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": false,
    "id": 20,
    "nodeId": 26,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 21,
    "nodeId": 17,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 22,
    "nodeId": 16,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 23,
    "nodeId": 12,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 3,
      ".1": 1,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 24,
    "nodeId": 14,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 25,
    "nodeId": 13,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 26,
    "nodeId": 11,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 27,
    "nodeId": 24,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 28,
    "nodeId": 25,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 29,
    "nodeId": 23,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 30,
    "nodeId": 27,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 31,
    "nodeId": 28,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 32,
    "nodeId": 26,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 3,
      ".1": 1,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 33,
    "nodeId": 35,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 34,
    "nodeId": 36,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 35,
    "nodeId": 34,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 3,
      ".1": 1,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 36,
    "nodeId": 38,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 37,
    "nodeId": 40,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 38,
    "nodeId": 41,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 39,
    "nodeId": 39,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 40,
    "nodeId": 37,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": false,
    "id": 41,
    "nodeId": 33,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 3,
      ".1": 1,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 42,
    "nodeId": 48,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 43,
    "nodeId": 50,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 44,
    "nodeId": 51,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 45,
    "nodeId": 49,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 46,
    "nodeId": 47,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 3,
      ".1": 1,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 47,
    "nodeId": 55,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 48,
    "nodeId": 57,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 49,
    "nodeId": 58,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 50,
    "nodeId": 56,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 3,
      ".1": 1,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 51,
    "nodeId": 60,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 52,
    "nodeId": 61,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 53,
    "nodeId": 59,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 54,
    "nodeId": 53,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 3,
      ".1": 3,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 55,
    "nodeId": 65,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 56,
    "nodeId": 66,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 57,
    "nodeId": 67,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 58,
    "nodeId": 63,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 59,
    "nodeId": 30,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 60,
    "nodeId": 29,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": -1,
    "id": 61,
    "nodeId": 27,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 62,
    "nodeId": 28,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": false,
    "id": 63,
    "nodeId": 26,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 64,
    "nodeId": 17,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 65,
    "nodeId": 16,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 66,
    "nodeId": 12,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 3,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 67,
    "nodeId": 14,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 68,
    "nodeId": 13,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 69,
    "nodeId": 11,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 70,
    "nodeId": 24,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 71,
    "nodeId": 25,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 72,
    "nodeId": 23,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 73,
    "nodeId": 27,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 74,
    "nodeId": 28,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 75,
    "nodeId": 26,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 3,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 76,
    "nodeId": 35,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 77,
    "nodeId": 36,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 78,
    "nodeId": 34,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 3,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 79,
    "nodeId": 38,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 80,
    "nodeId": 40,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 81,
    "nodeId": 41,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 82,
    "nodeId": 39,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 83,
    "nodeId": 37,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": false,
    "id": 84,
    "nodeId": 33,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 3,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 85,
    "nodeId": 48,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 86,
    "nodeId": 50,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 87,
    "nodeId": 51,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 88,
    "nodeId": 49,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 89,
    "nodeId": 47,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 3,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 90,
    "nodeId": 55,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 91,
    "nodeId": 57,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 92,
    "nodeId": 58,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 93,
    "nodeId": 56,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 3,
      ".2": 2,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 94,
    "nodeId": 60,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 95,
    "nodeId": 61,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 96,
    "nodeId": 59,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 97,
    "nodeId": 53,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 3,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 98,
    "nodeId": 65,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 99,
    "nodeId": 66,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 100,
    "nodeId": 67,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 101,
    "nodeId": 63,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 102,
    "nodeId": 30,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 103,
    "nodeId": 29,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 104,
    "nodeId": 27,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 105,
    "nodeId": 28,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 106,
    "nodeId": 26,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 107,
    "nodeId": 35,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 108,
    "nodeId": 36,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 109,
    "nodeId": 34,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 110,
    "nodeId": 38,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 111,
    "nodeId": 40,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 112,
    "nodeId": 41,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 113,
    "nodeId": 39,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 114,
    "nodeId": 37,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 115,
    "nodeId": 33,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 116,
    "nodeId": 17,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 117,
    "nodeId": 16,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 118,
    "nodeId": 12,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 119,
    "nodeId": 14,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 120,
    "nodeId": 13,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 121,
    "nodeId": 11,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 122,
    "nodeId": 24,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 123,
    "nodeId": 25,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 124,
    "nodeId": 23,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 125,
    "nodeId": 27,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 126,
    "nodeId": 28,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 127,
    "nodeId": 26,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 128,
    "nodeId": 35,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 129,
    "nodeId": 36,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 130,
    "nodeId": 34,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 131,
    "nodeId": 38,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 132,
    "nodeId": 40,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 133,
    "nodeId": 41,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 134,
    "nodeId": 39,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 135,
    "nodeId": 37,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 136,
    "nodeId": 33,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 137,
    "nodeId": 17,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 138,
    "nodeId": 16,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 139,
    "nodeId": 12,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 140,
    "nodeId": 14,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 141,
    "nodeId": 13,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 142,
    "nodeId": 11,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 143,
    "nodeId": 24,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 144,
    "nodeId": 25,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 145,
    "nodeId": 23,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 146,
    "nodeId": 27,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 147,
    "nodeId": 28,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 148,
    "nodeId": 26,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 149,
    "nodeId": 35,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 150,
    "nodeId": 36,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 151,
    "nodeId": 34,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 152,
    "nodeId": 38,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 153,
    "nodeId": 40,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 154,
    "nodeId": 41,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 155,
    "nodeId": 39,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 156,
    "nodeId": 37,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": false,
    "id": 157,
    "nodeId": 33,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 158,
    "nodeId": 48,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 159,
    "nodeId": 50,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 160,
    "nodeId": 51,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 161,
    "nodeId": 49,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 162,
    "nodeId": 47,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 163,
    "nodeId": 55,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 164,
    "nodeId": 57,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 165,
    "nodeId": 58,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 166,
    "nodeId": 56,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 4,
      "id": "1",
      "type": "array",
    },
    "id": 167,
    "nodeId": 60,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 168,
    "nodeId": 61,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 169,
    "nodeId": 59,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 170,
    "nodeId": 53,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 5,
      ".4": 5,
      "id": "1",
      "type": "array",
    },
    "id": 171,
    "nodeId": 65,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 172,
    "nodeId": 66,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 173,
    "nodeId": 67,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 174,
    "nodeId": 63,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 175,
    "nodeId": 30,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 176,
    "nodeId": 29,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 177,
    "nodeId": 27,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 0,
    "id": 178,
    "nodeId": 28,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 179,
    "nodeId": 26,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 4,
      ".4": 5,
      "id": "1",
      "type": "array",
    },
    "id": 180,
    "nodeId": 35,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 181,
    "nodeId": 36,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 182,
    "nodeId": 34,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 4,
      ".4": 5,
      "id": "1",
      "type": "array",
    },
    "id": 183,
    "nodeId": 38,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 2,
    "id": 184,
    "nodeId": 40,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 1,
    "id": 185,
    "nodeId": 41,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 3,
    "id": 186,
    "nodeId": 39,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 187,
    "nodeId": 37,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": true,
    "id": 188,
    "nodeId": 33,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 189,
    "nodeId": 17,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 4,
    "id": 190,
    "nodeId": 16,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 191,
    "nodeId": 12,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      ".0": 1,
      ".1": 2,
      ".2": 3,
      ".3": 4,
      ".4": 5,
      "id": "1",
      "type": "array",
    },
    "id": 192,
    "nodeId": 14,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": 5,
    "id": 193,
    "nodeId": 13,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": false,
    "id": 194,
    "nodeId": 11,
    "parentId": 9,
    "type": "expr",
  },
  Object {
    "astId": "test",
    "data": Object {
      "name": "undefined",
      "type": "builtin",
    },
    "id": 195,
    "nodeId": 2,
    "parentId": 9,
    "type": "fn-ret",
  },
  Object {
    "astId": "test",
    "data": Object {
      "name": "undefined",
      "type": "builtin",
    },
    "id": 196,
    "nodeId": 78,
    "parentId": undefined,
    "type": "expr",
  },
]
`;
