{"version":3,"sources":["../../blunt-instrument-core/target/cjs/trace/TrevCollection.js","../../blunt-instrument-core/target/cjs/index.js","../../blunt-instrument-core/target/cjs/ast/attachCodeSlicesToAST.js","../../blunt-instrument-core/target/cjs/ast/toNodeKey.js","../../babel-plugin-blunt-instrument/target/cjs/index.js","../../blunt-instrument-test-resources/target/cjs/index.js","../../blunt-instrument-core/target/cjs/ast/ASTBundle.js","../../blunt-instrument-core/target/cjs/ast/addNodeIdsToAST.js","../../blunt-instrument-core/target/cjs/ast/copyNodeIdsBetweenASTs.js","../../blunt-instrument-core/target/cjs/ast/fromNodeKey.js","../../blunt-instrument-core/target/cjs/trace/ArrayTrace.js","../../blunt-instrument-core/target/cjs/trace/ConsoleTraceWriter.js","../../blunt-instrument-core/target/cjs/trace/FileTraceWriter.js","../../blunt-instrument-core/target/cjs/trace/Tracer.js","util/findChildNodes.js","components/AnnotatedCode/AnnotatedCodeView.js","components/ASTNav/ASTNavView.js","components/SmallDataPreview/SmallDataPreviewView.js","components/TrevTable/TrevTableView.js","components/TraceQueryForm/TraceQueryFormView.js","components/LargeDataPreview/LargeDataPreviewView.js","components/App/AppView.js","util/buildASTNames.js","util/isVisibleWithin.js","components/App/AppContainer.js","../../blunt-instrument-eval/src/index.js","serviceWorker.js","index.js","../../blunt-instrument-core/target/cjs/ast/traverseAST.js"],"names":["Object","defineProperty","exports","value","obj","_ASTBundle","require","__esModule","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","configurable","writable","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","toString","from","_iterableToArray","TypeError","_nonIterableSpread","_defineProperties","props","descriptor","TrevCollection","trevs","astb","instance","Constructor","_classCallCheck","this","trevsById","Map","forEach","trev","set","id","protoProps","staticProps","input","Error","fromJSON","get","_this","newTrevs","ancestorsForParent","childrenForParent","getAncestors","parentId","existing","parent","getTrev","concat","ancestors","node","getNode","astId","nodeId","array","denormalized","ancestorIds","children","arguments","getOwnPropertyDescriptors","defineProperties","_objectSpread","newTC","newTrev","map","fn","_this2","facets","nodes","nodeTypes","types","type","tc","withoutDenormalizedInfo","asJSON","_addNodeIdsToAST","_attachCodeSlicesToAST","_copyNodeIdsBetweenASTs","_fromNodeKey","_toNodeKey","_ArrayTrace","_ConsoleTraceWriter","_FileTraceWriter","_Tracer","_TrevCollection","defaultTracer","_interopRequireDefault","ast","code","_traverseAST","Number","isInteger","start","end","codeSlice","slice","encodeURIComponent","_typeof","constructor","api","opts","tracerVar","_opts$consoleWriter","consoleWriter","_opts$fileWriterPath","fileWriterPath","_opts$astCallback","astCallback","givenASTId","_opts$astSelfRegister","astSelfRegister","_opts$defaultEnabled","defaultEnabled","visitor","Program","path","file","filename","checkEnabled","directives","traverseFast","leadingComments","trailingComments","comment","match","directiveRegexes","find","_ref5","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","_iterableToArrayLimit","_nonIterableRest","_slicedToArray","test","loc","line","enabled","current","enabledChecker","_bluntInstrumentCore","addNodeIdsToAST","state","_path$node$body","_path$node$body2","_path$node$body3","ids","astIdId","scope","generateUidIdentifier","tracerId","identifier","fnStartIdId","astString","stringLiteral","JSON","stringify","body","unshift","buildRegisterAST","codeString","buildSetAstId","buildAttachConsoleTraceWriter","tempId","encode","booleanLiteral","buildAttachFileTraceWriter","prefix","buildImportTracer","addInstrumenterInit","traverse","instrumentVisitor","_template","cache","_getRequireWildcardCache","has","newObj","hasPropertyDescriptor","hasOwnProperty","desc","_interopRequireWildcard","WeakMap","buildFnTrace","buildReturnTrace","buildExpressionTrace","buildPauseTrace","expression","buildResumeTrace","addPauseTrace","_ref4","biId","biTracedYield","pauseTrace","numericLiteral","argument","resumeTrace","replaceWith","basePostfixRewrite","postfixRewriteTemplates","replace","UpdateExpression","op","operator","replacement","assignmentExpression","lval","_replacement","Expression","exit","isAwaitExpression","isYieldExpression","_ref3","isImportDeclaration","parentPath","isMemberExpression","isCallExpression","callee","biTracedExpr","isReferenced","isObjectMethod","isClassMethod","isClassPrivateMethod","params","includes","trace","addExpressionTrace","Function","_ref","biTracedFn","idNames","Set","getBindingIdentifiers","add","properties","idName","val","thisExpression","objectProperty","isExpression","retval","args","objectExpression","addFnTrace","ReturnStatement","_ref2","addReturnTrace","AwaitExpression","YieldExpression","examples","_default","_cloneDeep","ASTBundle","asts","nodesByKey","sources","biASTId","biKey","nodeKey","filterFn","results","_this3","nextId","to","fromNodes","toNodes","split","decodeURIComponent","_objectGraphAsJson","ArrayTrace","_ref$encoder","encoder","Encoder","onChange","encoded","data","ConsoleTraceWriter","_ref$encode","console","log","dir","summary","column","fs","FileTraceWriter","_ref$prefix","Date","getTime","ws","createWriteStream","on","error","endReject","promises","readFile","encoding","then","parseToTC","text","json","parse","write","Promise","resolve","reject","Tracer","listeners","onRegisterAST","onTrev","stack","listener","handleRegisterAST","bind","handleTrev","lis","pop","more","generateId","callData","pushContext","popContext","fnStartId","findNodes","flatMap","k","CodeForNode","highlightedNodeKey","onHoveredNodeChange","onNodeSelectedToggle","selectedNodeKeys","cur","elements","shorthand","findChildNodes","sort","a","b","child","handleMouseOver","event","stopPropagation","handleClick","className","join","onClick","onMouseOver","AnnotatedCodeView","clearHover","onMouseLeave","ASTObjectView","rest","typeEl","nodeIdEl","locEl","locString","entries","item","index","ASTNavView","SmallDataPreviewView","trevType","output","outputKey","recurse","classes","top","count","fixedWidth","string","name","truncated","startsWith","description","TrevTableView","highlightedTrevId","onHoveredTrevChange","trevId","onOpenModalData","modalData","onTrevTypeSelectedToggle","ev","TraceQueryFormView","onTraceQueryChange","query","onPlay","onStop","isPlaying","astNames","nodeOption","codePreview","label","getFacets","nodesOptions","nodesValue","getNodeByKey","nodeTypesOptions","nodeTypesValue","typesOptions","typesValue","classNamePrefix","isMulti","options","selected","update","$set","placeholder","aria-labelledby","preventDefault","LargeDataPreviewView","AppView","filteredTC","traceQuery","onLoadByFile","onLoadByPaste","onRun","onSourceDraftChange","onCloseModalData","status","sourceDraft","selectedExample","exampleOptions","runStatus","loadStatus","action","tracedError","astIds","partArrays","every","shift","names","result","buildASTNames","title","autoComplete","autoCorrect","spellCheck","blob","Blob","FileSaver","saveAs","htmlFor","onPaste","clipboardData","window","getData","accept","files","instrumentedAST","src","$toggle","displayDataTypes","href","isOpen","onRequestClose","contentLabel","shouldCloseOnOverlayClick","isVisibleWithin","container","min","tr","getBoundingClientRect","cr","bottom","right","left","defaultQueryState","AppContainer","assign","doRun","factorial","handleTraceQueryChange","handleHoveredTrevChange","handleHoveredNodeChange","handleLoadByPaste","loadFromJSONText","handleLoadByFile","handleNodeSelectedToggle","handleRun","handleSourceDraftChange","handleOpenModalData","handleCloseModalData","handlePlay","handleStop","document","querySelectorAll","codePanel","highlightedNodeEl","querySelector","scrollIntoView","behavior","trevPanel","highlightedTrevEl","highlightedNodeEls","some","el","setState","doQuery","reader","FileReader","onerror","abort","onload","readAsText","error2","empty","withDenormalizedInfo","eval","nextIndex","handler","setInterval","walkthroughTimerId","clearInterval","saveInstrumented","warn","tracer","addListener","babelOpts","configFile","plugins","bluntInstrumentPlugin","babelResult","transformSync","sourceType","e","parsed","parseSync","copyNodeIdsBetweenASTs","instrumentedASTB","instrumentedEval","toTC","refreshScheduled","setTimeout","React","Component","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","traverseAST","values"],"mappings":"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","file":"static/js/main.f8795ce5.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ASTBundle = _interopRequireDefault(require(\"../ast/ASTBundle\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @typedef {Object} TrevExtended\n * @property {number} id\n * @property {?number} parentId - indicates the trev which enclosed this one on the call stack\n * @property {string} type - type of trace event\n * @property {string} astId - AST id of the node representing the code which this trev is for\n * @property {number} nodeId - node id of the node representing the code which this trev is for\n * @property {*} data - traced data, encoded via object-graph-as-json\n * @property {?number} fnStartId - for type=fn-resume, the id of the type=fn-start trev in which\n *   the generator/async function first began executing\n * @property {?Object} denormalized - populated by TrevCollection.withDenormalizedInfo()\n * @property {number[]} denormalized.ancestorIds - ids of every trev above this on the call stack\n * @property {TrevExtended[]} denormalized.children - all trevs of which this is the direct parent\n * @property {Node} denormalized.node - babel node corresponding to the astId and nodeId\n */\n\n/**\n * @typedef {Object} TrevCollectionFacets\n * @property {Map} nodes - map of babel @type {Node} to @type {number} of times trevs for\n *   that node in the collection\n * @property {Map} nodeTypes - map of @type {string} babel node type to @type {number} of trevs\n *   for that node type in the collection\n * @property {Map} types - map of @type {string} trev type to @type {number} of trevs of that\n *   type in the collection\n */\n\n/**\n * Wraps a group of trace events and their associated AST(s).\n */\nvar TrevCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {TrevExtended} trevs\n   * @param {ASTBundle} astb\n   */\n  function TrevCollection(trevs, astb) {\n    _classCallCheck(this, TrevCollection);\n\n    this.trevs = trevs;\n    this.astb = astb;\n    var trevsById = new Map();\n    trevs.forEach(function (trev) {\n      trevsById.set(trev.id, trev);\n    });\n    this.trevsById = trevsById;\n  }\n  /**\n   * @param {number} id\n   * @returns the trev for the given ID, or undefined\n   */\n\n\n  _createClass(TrevCollection, [{\n    key: \"getTrev\",\n    value: function getTrev(id) {\n      return this.trevsById.get(id);\n    }\n    /**\n     * @returns {TrevCollection} with the `denormalized` field populated on each trev\n     * @throws when a trev's parentId or astId & nodeId combination is invalid\n     */\n\n  }, {\n    key: \"withDenormalizedInfo\",\n    value: function withDenormalizedInfo() {\n      var _this = this;\n\n      var newTrevs = [];\n      var ancestorsForParent = [];\n      var childrenForParent = new Map();\n\n      var getAncestors = function getAncestors(parentId) {\n        if (!parentId) {\n          return [];\n        }\n\n        var existing = ancestorsForParent[parentId];\n\n        if (existing) {\n          return existing;\n        }\n\n        var parent = _this.getTrev(parentId);\n\n        if (!parent) {\n          throw new Error(\"Trev has invalid parentId [\".concat(parentId, \"]\"));\n        }\n\n        var ancestors = [].concat(_toConsumableArray(getAncestors(parent.parentId)), [parentId]);\n        ancestorsForParent[parentId] = ancestors;\n        return ancestors;\n      };\n\n      this.trevs.forEach(function (trev) {\n        var node = _this.astb.getNode(trev.astId, trev.nodeId);\n\n        if (!node) {\n          throw new Error(\"Trev id [\".concat(trev.id, \"] has unknown node id [\").concat(trev.nodeId, \"] for AST id [\").concat(trev.astId, \"]\"));\n        }\n\n        if (trev.parentId) {\n          var array = childrenForParent.get(trev.parentId);\n\n          if (!array) {\n            array = [];\n            childrenForParent.set(trev.parentId, array);\n          }\n\n          array.push(trev.id);\n        }\n\n        var denormalized = {\n          ancestorIds: getAncestors(trev.parentId),\n          children: [],\n          node: node\n        };\n        newTrevs.push(_objectSpread({}, trev, {\n          denormalized: denormalized\n        }));\n      });\n      var newTC = new TrevCollection(newTrevs, this.astb);\n      childrenForParent.forEach(function (children, parentId) {\n        var newTrev = newTC.getTrev(parentId);\n\n        if (newTrev) {\n          newTrev.denormalized.children = children.map(function (id) {\n            return newTC.getTrev(id);\n          });\n        }\n      });\n      return newTC;\n    }\n    /**\n     * @returns {TrevCollection} with the `denormalized` field removed from each trev\n     */\n\n  }, {\n    key: \"withoutDenormalizedInfo\",\n    value: function withoutDenormalizedInfo() {\n      var newTrevs = this.trevs.map(function (trev) {\n        var denormalized = trev.denormalized,\n            rest = _objectWithoutProperties(trev, [\"denormalized\"]);\n\n        return rest;\n      });\n      return new TrevCollection(newTrevs, this.astb);\n    }\n    /**\n     * Calls the provided function for each trev in the collection, and returns a new\n     * TrevCollection containing only the ones for which it returned true.\n     * @param {function} fn\n     * @returns {TrevCollection}\n     */\n\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var filtered = this.trevs.filter(fn);\n      return new TrevCollection(filtered, this.astb);\n    }\n    /**\n     * @returns {TrevCollectionFacets}\n     */\n\n  }, {\n    key: \"getFacets\",\n    value: function getFacets() {\n      var _this2 = this;\n\n      var facets = {\n        nodes: new Map(),\n        nodeTypes: new Map(),\n        types: new Map()\n      };\n      this.trevs.forEach(function (trev) {\n        var node = _this2.astb.getNode(trev.astId, trev.nodeId);\n\n        if (!node) {\n          return;\n        }\n\n        facets.nodes.set(node, (facets.nodes.get(node) || 0) + 1);\n        facets.nodeTypes.set(node.type, (facets.nodeTypes.get(node.type) || 0) + 1);\n        facets.types.set(trev.type, (facets.types.get(trev.type) || 0) + 1);\n      });\n      return facets;\n    }\n    /**\n     * @returns {Object} a representation of this TrevCollection that can be serialized as JSON\n     *   and later deserialized and loaded using fromJSON\n     */\n\n  }, {\n    key: \"asJSON\",\n    value: function asJSON() {\n      var tc = this.withoutDenormalizedInfo();\n      return {\n        astb: tc.astb.asJSON(),\n        trevs: tc.trevs\n      };\n    }\n    /**\n     * Restores an instance that was saved using asJSON()\n     * @param {Object} input\n     * @returns {TrevCollection}\n     */\n\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(input) {\n      if (!input.astb || !input.trevs) {\n        throw new Error('Expected `astb` and `trevs` fields');\n      }\n\n      return new TrevCollection(input.trevs, _ASTBundle[\"default\"].fromJSON(input.astb));\n    }\n    /**\n     * @returns {TrevCollection} empty TrevCollection with no ASTs.\n     */\n\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      return new TrevCollection([], new _ASTBundle[\"default\"]());\n    }\n  }]);\n\n  return TrevCollection;\n}();\n\nexports[\"default\"] = TrevCollection;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"addNodeIdsToAST\", {\n  enumerable: true,\n  get: function get() {\n    return _addNodeIdsToAST[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"ASTBundle\", {\n  enumerable: true,\n  get: function get() {\n    return _ASTBundle[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"attachCodeSlicesToAST\", {\n  enumerable: true,\n  get: function get() {\n    return _attachCodeSlicesToAST[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"copyNodeIdsBetweenASTs\", {\n  enumerable: true,\n  get: function get() {\n    return _copyNodeIdsBetweenASTs[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"fromNodeKey\", {\n  enumerable: true,\n  get: function get() {\n    return _fromNodeKey[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"toNodeKey\", {\n  enumerable: true,\n  get: function get() {\n    return _toNodeKey[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"ArrayTrace\", {\n  enumerable: true,\n  get: function get() {\n    return _ArrayTrace[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"ConsoleTraceWriter\", {\n  enumerable: true,\n  get: function get() {\n    return _ConsoleTraceWriter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"FileTraceWriter\", {\n  enumerable: true,\n  get: function get() {\n    return _FileTraceWriter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Tracer\", {\n  enumerable: true,\n  get: function get() {\n    return _Tracer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"TrevCollection\", {\n  enumerable: true,\n  get: function get() {\n    return _TrevCollection[\"default\"];\n  }\n});\nexports.defaultTracer = void 0;\n\nvar _addNodeIdsToAST = _interopRequireDefault(require(\"./ast/addNodeIdsToAST\"));\n\nvar _ASTBundle = _interopRequireDefault(require(\"./ast/ASTBundle\"));\n\nvar _attachCodeSlicesToAST = _interopRequireDefault(require(\"./ast/attachCodeSlicesToAST\"));\n\nvar _copyNodeIdsBetweenASTs = _interopRequireDefault(require(\"./ast/copyNodeIdsBetweenASTs\"));\n\nvar _fromNodeKey = _interopRequireDefault(require(\"./ast/fromNodeKey\"));\n\nvar _toNodeKey = _interopRequireDefault(require(\"./ast/toNodeKey\"));\n\nvar _ArrayTrace = _interopRequireDefault(require(\"./trace/ArrayTrace\"));\n\nvar _ConsoleTraceWriter = _interopRequireDefault(require(\"./trace/ConsoleTraceWriter\"));\n\nvar _FileTraceWriter = _interopRequireDefault(require(\"./trace/FileTraceWriter\"));\n\nvar _Tracer = _interopRequireDefault(require(\"./trace/Tracer\"));\n\nvar _TrevCollection = _interopRequireDefault(require(\"./trace/TrevCollection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar defaultTracer = new _Tracer[\"default\"]();\nexports.defaultTracer = defaultTracer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = attachCodeSlicesToAST;\n\nvar _traverseAST = _interopRequireDefault(require(\"./traverseAST\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Attach a field `codeSlice` to each node in an AST, containing the snippet of source\n * code to which the node corresponds. Requires the node to have integer `start` and\n * `end` fields indicating the section of code to which it corresponds.\n * @param {Node} ast - the parent which will be annotated along with its descendants\n * @param {string} code - full source code corresponding to the AST\n */\nfunction attachCodeSlicesToAST(ast, code) {\n  (0, _traverseAST[\"default\"])(ast, function (node) {\n    if (Number.isInteger(node.start) && Number.isInteger(node.end)) {\n      if (node.start < 0 || node.end > code.length) {\n        throw new Error(\"Node start [\".concat(node.start, \"] or end [\").concat(node.end, \"] is out of range\"));\n      } // eslint-disable-next-line no-param-reassign\n\n\n      node.codeSlice = code.slice(node.start, node.end);\n    }\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = toNodeKey;\n\n/**\n * Builds a string composite key from an AST id and a node id.\n * @param {string} astId\n * @param {number} nodeId\n * @returns {string}\n */\nfunction toNodeKey(astId, nodeId) {\n  return \"\".concat(encodeURIComponent(astId), \":\").concat(nodeId);\n}","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _template = _interopRequireDefault(require(\"@babel/template\"));\n\nvar types = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _bluntInstrumentCore = require(\"blunt-instrument-core\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar buildImportTracer = (0, _template[\"default\"])(\"\\n  import { defaultTracer as %%tempId%% } from 'blunt-instrument-core';\\n  const %%tracerId%% = %%tempId%%;\\n\");\nvar buildAttachConsoleTraceWriter = (0, _template[\"default\"])(\"\\n  import { ConsoleTraceWriter as %%tempId%% } from 'blunt-instrument-core';\\n  if (!%%tracerId%%.attachedConsoleWriterByPlugin) {\\n    %%tracerId%%.addListener(new %%tempId%%({ encode: %%encode%% }));\\n    %%tracerId%%.attachedConsoleWriterByPlugin = true;\\n  }\\n\");\nvar buildAttachFileTraceWriter = (0, _template[\"default\"])(\"\\n  import { FileTraceWriter as %%tempId%% } from 'blunt-instrument-core';\\n  if (!%%tracerId%%.attachedFileWriterByPlugin) {\\n    %%tracerId%%.addListener(new %%tempId%%({ prefix: %%prefix%% }));\\n    %%tracerId%%.attachedFileWriterByPlugin = true;\\n  }\\n\");\nvar buildSetAstId = (0, _template[\"default\"])(\"\\n  const %%astIdId%% = %%astId%%;\\n\");\nvar buildRegisterAST = (0, _template[\"default\"])(\"\\n  %%tracerId%%.onRegisterAST(%%astIdId%%, JSON.parse(%%astString%%), %%codeString%%);\\n\");\nvar buildFnTrace = (0, _template[\"default\"])(\"{\\n  const %%fnStartIdId%% = %%tracerId%%.traceFnStart(%%astIdId%%, %%nodeId%%, %%args%%);\\n  try {\\n    %%body%%\\n  } catch (e) {\\n    %%tracerId%%.traceFnThrow(%%astIdId%%, %%nodeId%%, e);\\n    throw e;\\n  }\\n  %%tracerId%%.traceFnRet(%%astIdId%%, %%nodeId%%, undefined);\\n}\");\nvar buildReturnTrace = (0, _template[\"default\"])(\"\\n  return %%tracerId%%.traceFnRet(%%astIdId%%, %%nodeId%%, %%retval%%);\\n\");\n\nfunction addFnTrace(path, _ref) {\n  var astIdId = _ref.astIdId,\n      tracerId = _ref.tracerId,\n      fnStartIdId = _ref.fnStartIdId,\n      checkEnabled = _ref.checkEnabled;\n  var node = path.node;\n\n  if (!checkEnabled(node)) {\n    return;\n  } // Don't trace nodes without a node ID - those are nodes we added\n\n\n  if (!node.biId) {\n    return;\n  } // If biTracedFn is true, we've already added tracing to this node\n\n\n  if (node.biTracedFn) {\n    return;\n  }\n\n  var idNames = new Set(Object.keys(types.getBindingIdentifiers(node.params))); // We always want to trace the values of `this` and `arguments`. It's possible\n  // to define parameters on a function named `this` and `arguments`, which will\n  // supersede the built-in bindings; if the function has done that, `this` and `arguments`\n  // will be in the set already.\n\n  idNames.add('this');\n  idNames.add('arguments');\n  var properties = [];\n  idNames.forEach(function (idName) {\n    var key = types.identifier(idName); // When setting a property named `this` in an object expression,\n    // the key must be an Identifier node with name=`this`. For setting the\n    // value to `this`, either a `ThisExpression` node or an `Identifier` node\n    // with name=`this` will work. But if you re-parse the generated code,\n    // it's always a `ThisExpression`, so we use that here because blunt-instrument-eval\n    // does re-parse the generated code and expect it to have all the same node types\n    // as the AST generated by the plugin.\n\n    var val = idName === 'this' ? types.thisExpression() : key;\n    properties.push(types.objectProperty(key, val, false, !['this', 'arguments'].includes(idName)));\n  });\n  var body = node.body;\n\n  if (types.isExpression(body)) {\n    body = buildReturnTrace({\n      tracerId: tracerId,\n      astIdId: astIdId,\n      nodeId: types.numericLiteral(node.biId),\n      retval: node.body\n    });\n  }\n\n  var trace = buildFnTrace({\n    body: body,\n    tracerId: tracerId,\n    fnStartIdId: fnStartIdId,\n    astIdId: astIdId,\n    nodeId: types.numericLiteral(node.biId),\n    args: types.objectExpression(properties)\n  });\n  node.body = trace;\n  node.biTracedFn = true;\n}\n\nfunction addReturnTrace(path, _ref2) {\n  var astIdId = _ref2.astIdId,\n      tracerId = _ref2.tracerId,\n      checkEnabled = _ref2.checkEnabled;\n  var node = path.node;\n\n  if (!checkEnabled(node)) {\n    return;\n  } // Don't trace nodes without a node ID - those are nodes we added\n\n\n  if (!node.biId) {\n    return;\n  }\n\n  var trace = buildReturnTrace({\n    tracerId: tracerId,\n    astIdId: astIdId,\n    nodeId: types.numericLiteral(node.biId),\n    retval: node.argument\n  });\n  path.replaceWith(trace);\n}\n\nvar buildExpressionTrace = (0, _template[\"default\"])(\"\\n  %%tracerId%%.traceExpr(%%astIdId%%, %%nodeId%%, %%expression%%)\\n\");\n/**\n * Replaces an expression node with a traced equivalent.\n * For example, rewrites `x + 1` to `tracer.logExpr('NODEID', x + 1)`\n * @param {NodePath} path - path containing expression node\n * @param {object} state - metadata returned from addInstrumenterInit\n */\n\nfunction addExpressionTrace(path, _ref3) {\n  var astIdId = _ref3.astIdId,\n      tracerId = _ref3.tracerId,\n      checkEnabled = _ref3.checkEnabled;\n  var node = path.node;\n\n  if (!checkEnabled(node)) {\n    return;\n  } // Don't try to instrument the \"bar\" in `import foo from \"bar\"`\n\n\n  if (types.isImportDeclaration(path.parentPath.node)) {\n    return;\n  } // Don't trace the retrieval of a method from an object.\n  // In other words, this if block detects if we're looking at a node like\n  // `x.y` that's part of a node like `x.y()`, and skips tracing if so.\n  // Otherwise, we'd rewrite `x.y()` to something like `trace(x.y)()`, which\n  // changes the semantics of the program: the former will bind `this` to `x`\n  // but the latter will not.\n  // TODO the right way to do this is probably to save `x` and `x.y` into temp\n  // variables t1 and t2, and rewrite the expression to t2.apply(t1, args).\n  // (We must avoid retrieving `x.y` twice, because it might be a getter, and\n  // we don't want to change the original program's semantics by invoking a\n  // getter twice instead of once.)\n  // To be really robust though we'd also need to account for the possibility\n  // that y's `apply` method has been overridden.\n  // `x.y` twice (which would change the program semantics if `y` is a getter).\n\n\n  if (types.isMemberExpression(node) && types.isCallExpression(path.parentPath.node) && path.node === path.parentPath.node.callee) {\n    return;\n  } // Don't trace nodes without a node ID - those are nodes we added\n\n\n  if (!node.biId) {\n    return;\n  } // If biTracedExpr is true, we've already added tracing for this node\n\n\n  if (node.biTracedExpr) {\n    return;\n  } // Don't trace identifiers that aren't being evaluated, e.g. the x in `x = 4`\n\n\n  if (!path.isReferenced()) {\n    return;\n  } // Workaround for https://github.com/babel/babel/issues/11087\n\n\n  if ((types.isObjectMethod(path.parentPath.node) || types.isClassMethod(path.parentPath.node) || types.isClassPrivateMethod(path.parentPath.node)) && path.parentPath.node.params.includes(path.node)) {\n    return;\n  }\n\n  var trace = buildExpressionTrace({\n    tracerId: tracerId,\n    astIdId: astIdId,\n    nodeId: types.numericLiteral(node.biId),\n    expression: node\n  });\n  node.biTracedExpr = true;\n  path.replaceWith(trace);\n}\n\nvar buildPauseTrace = _template[\"default\"].expression(\"\\n  %%tracerId%%.traceFnPause(%%astIdId%%, %%nodeId%%, %%argument%%)\\n\");\n\nvar buildResumeTrace = _template[\"default\"].expression(\"\\n  %%tracerId%%.traceFnResume(%%astIdId%%, %%nodeId%%, %%expression%%, %%fnStartIdId%%)\\n\");\n/**\n * Replaces a yield or await expression with a traced equivalent.\n * @param {NodePath} path - path containing yield or await expression node\n * @param {object} state - metadata returned from addInstrumenterInit\n */\n\n\nfunction addPauseTrace(path, _ref4) {\n  var astIdId = _ref4.astIdId,\n      tracerId = _ref4.tracerId,\n      fnStartIdId = _ref4.fnStartIdId,\n      checkEnabled = _ref4.checkEnabled;\n  var node = path.node;\n\n  if (!checkEnabled(node)) {\n    return;\n  } // Don't trace nodes without a node ID - those are nodes we added\n\n\n  if (!node.biId) {\n    return;\n  } // if biTracedYield is true, we've already added tracing for this node\n\n\n  if (node.biTracedYield) {\n    return;\n  }\n\n  var pauseTrace = buildPauseTrace({\n    tracerId: tracerId,\n    astIdId: astIdId,\n    nodeId: types.numericLiteral(node.biId),\n    argument: node.argument\n  });\n  node.argument = pauseTrace;\n  var resumeTrace = buildResumeTrace({\n    tracerId: tracerId,\n    fnStartIdId: fnStartIdId,\n    astIdId: astIdId,\n    nodeId: types.numericLiteral(node.biId),\n    expression: node\n  });\n  node.biTracedYield = true;\n  path.replaceWith(resumeTrace);\n}\n\nvar basePostfixRewrite = \"\\n  (() => {\\n    const %%tempId%% = %%lval%%;\\n    %%lval%% OPERATOR 1;\\n    return %%tempId%%;\\n  })()\\n\";\nvar postfixRewriteTemplates = {\n  '++': (0, _template[\"default\"])(basePostfixRewrite.replace('OPERATOR', '+=')),\n  '--': (0, _template[\"default\"])(basePostfixRewrite.replace('OPERATOR', '-='))\n};\nvar instrumentVisitor = {\n  UpdateExpression: function UpdateExpression(path) {\n    // TODO this is super hacky, and also written when the tracing worked\n    // differently, so probably can be simplified\n    var op = \"\".concat(path.node.operator[0], \"=\");\n\n    if (path.node.prefix) {\n      // Change ++x to x += 1\n      var replacement = types.assignmentExpression(op, path.node.argument, types.numericLiteral(1));\n      replacement.biId = path.node.biId;\n      path.replaceWith(replacement);\n    } else {\n      // Change x++ to (() => { const _postfix = x; x += 1; return _postfix})()\n      // TODO: currently, for x++, the original value of x is traced twice:\n      // once for the AST node corresponding to 'x' and once for the node corresponding\n      // to 'x++'. This seems correct (though tracing the node for 'x' at all may be\n      // superfluous) since the original value is the actual value returned by the\n      // expression. However, it might be desirable to add a third trace entry of\n      // a different type to trace the fact that 'x' is being updated to a new value.\n      var lval = path.node.argument;\n      var tempId = path.scope.generateUidIdentifier('postfix');\n\n      var _replacement = postfixRewriteTemplates[path.node.operator]({\n        tempId: tempId,\n        lval: lval\n      });\n\n      var nodeId = path.node.biId;\n      path.replaceWith(_replacement); // replaceWith appears to drop additional properties, so we must set biId\n      // afterward, not before\n      // TODO if that's true, why does setting it before work above\n\n      path.node.biId = nodeId; // eslint-disable-line no-param-reassign\n    }\n  },\n  Expression: {\n    exit: function exit(path) {\n      if (types.isAwaitExpression(path.node) || types.isYieldExpression(path.node)) {\n        return;\n      }\n\n      addExpressionTrace(path, this.state);\n    }\n  },\n  Function: function Function(path) {\n    addFnTrace(path, this.state);\n  },\n  ReturnStatement: function ReturnStatement(path) {\n    addReturnTrace(path, this.state);\n  },\n  AwaitExpression: function AwaitExpression(path) {\n    addPauseTrace(path, this.state);\n  },\n  YieldExpression: function YieldExpression(path) {\n    addPauseTrace(path, this.state);\n  }\n};\nvar directiveRegexes = [[/^\\s*bi-enable-line\\s*$/, 'enable-line'], [/^\\s*bi-disable-line\\s*$/, 'disable-line'], [/^\\s*bi-enable\\s*$/, 'enable'], [/^\\s*bi-disable\\s*$/, 'disable']];\n\nfunction enabledChecker(defaultEnabled, path) {\n  var directives = [];\n  types.traverseFast(path.node, function (node) {\n    (node.leadingComments || node.trailingComments || []).forEach(function (comment) {\n      var match = directiveRegexes.find(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 1),\n            regex = _ref6[0];\n\n        return regex.test(comment.value);\n      });\n\n      if (match) {\n        directives[comment.loc.start.line] = match[1]; // eslint-disable-line prefer-destructuring\n      }\n    });\n  });\n  var enabled = [];\n  var current = defaultEnabled;\n\n  for (var i = 1; i < directives.length; i += 1) {\n    switch (directives[i]) {\n      case 'enable-line':\n        enabled[i] = true;\n        break;\n\n      case 'disable-line':\n        enabled[i] = false;\n        break;\n\n      case 'enable':\n        enabled[i] = true;\n        current = true;\n        break;\n\n      case 'disable':\n        enabled[i] = false;\n        current = false;\n        break;\n\n      default:\n        enabled[i] = current;\n    }\n  }\n\n  return function (node) {\n    var line = node.loc && node.loc.start && node.loc.start.line;\n    return enabled[line] === undefined ? defaultEnabled : enabled[line];\n  };\n}\n/**\n * Babel plugin that instruments source code for automatic tracing.\n *\n * See README for usage and options.\n *\n * @param {*} babel\n */\n\n\nfunction _default(api, opts) {\n  var tracerVar = opts.tracerVar,\n      _opts$consoleWriter = opts.consoleWriter,\n      consoleWriter = _opts$consoleWriter === void 0 ? false : _opts$consoleWriter,\n      _opts$fileWriterPath = opts.fileWriterPath,\n      fileWriterPath = _opts$fileWriterPath === void 0 ? false : _opts$fileWriterPath,\n      _opts$astCallback = opts.astCallback,\n      astCallback = _opts$astCallback === void 0 ? function () {} : _opts$astCallback,\n      givenASTId = opts.astId,\n      _opts$astSelfRegister = opts.astSelfRegister,\n      astSelfRegister = _opts$astSelfRegister === void 0 ? true : _opts$astSelfRegister,\n      _opts$defaultEnabled = opts.defaultEnabled,\n      defaultEnabled = _opts$defaultEnabled === void 0 ? true : _opts$defaultEnabled;\n  var astId;\n\n  function addInstrumenterInit(path, code) {\n    var ids = {\n      astIdId: path.scope.generateUidIdentifier('astId'),\n      tracerId: tracerVar ? types.identifier(tracerVar) : path.scope.generateUidIdentifier('tracer'),\n      fnStartIdId: path.scope.generateUidIdentifier('fnStartId')\n    };\n\n    if (astSelfRegister) {\n      // TODO insert object directly instead of via json\n      var astString = types.stringLiteral(JSON.stringify(path.node));\n      path.node.body.unshift(buildRegisterAST({\n        astIdId: ids.astIdId,\n        tracerId: ids.tracerId,\n        astString: astString,\n        codeString: types.stringLiteral(code)\n      }));\n    }\n\n    path.node.body.unshift(buildSetAstId({\n      astIdId: ids.astIdId,\n      astId: types.stringLiteral(astId)\n    }));\n\n    if (consoleWriter === 'raw' || consoleWriter === 'encoded') {\n      var _path$node$body;\n\n      (_path$node$body = path.node.body).unshift.apply(_path$node$body, _toConsumableArray(buildAttachConsoleTraceWriter({\n        tempId: path.scope.generateUidIdentifier('temp'),\n        tracerId: ids.tracerId,\n        encode: types.booleanLiteral(consoleWriter === 'encoded')\n      })));\n    } else if (consoleWriter) {\n      throw new Error(\"Unrecognized value of consoleWriter: \".concat(consoleWriter));\n    }\n\n    if (fileWriterPath) {\n      var _path$node$body2;\n\n      (_path$node$body2 = path.node.body).unshift.apply(_path$node$body2, _toConsumableArray(buildAttachFileTraceWriter({\n        tempId: path.scope.generateUidIdentifier('temp'),\n        tracerId: ids.tracerId,\n        prefix: types.stringLiteral(fileWriterPath)\n      })));\n    }\n\n    if (!tracerVar) {\n      var _path$node$body3;\n\n      (_path$node$body3 = path.node.body).unshift.apply(_path$node$body3, _toConsumableArray(buildImportTracer({\n        tempId: path.scope.generateUidIdentifier('temp'),\n        tracerId: ids.tracerId\n      })));\n    }\n\n    return ids;\n  }\n\n  return {\n    visitor: {\n      Program: function Program(path) {\n        astId = givenASTId || this.file.opts.filename;\n        var code = this.file.code;\n\n        if (!astId) {\n          throw new Error('opts.astId is required when no filename is available');\n        }\n\n        var checkEnabled = enabledChecker(defaultEnabled, path);\n        (0, _bluntInstrumentCore.addNodeIdsToAST)(path.node);\n        astCallback(astId, path.node, code);\n\n        var state = _objectSpread({}, addInstrumenterInit(path, code), {\n          checkEnabled: checkEnabled\n        });\n\n        path.traverse(instrumentVisitor, {\n          state: state\n        });\n      }\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar examples = {};\nexamples.countdown = \"class Countdown {\\n  constructor(name, from, millis) {\\n    this.name = name;\\n    this.from = from;\\n    this.millis = millis;\\n  }\\n\\n  start() {\\n    this.intervalId = window.setInterval(this.tick.bind(this), this.millis);\\n  }\\n\\n  tick() {\\n    console.log(`${this.name}: ${this.from}`);\\n    this.from--;\\n    if (this.from <= 0) {\\n      window.clearInterval(this.intervalId);\\n    }\\n  }\\n}\\n\\nnew Countdown('A', 10, 5000).start();\\nnew Countdown('B', 10, 10000).start();\";\nexamples.factorial = \"function fac(n) {\\n  return n == 1 ? 1 : n * fac(n - 1);\\n}\\nconst result = fac(10);\";\nexamples.fetch = \"async function fetchAndLog() {\\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos/1');\\n  const json = await response.json();\\n  console.log(json);\\n}\\n\\nfetchAndLog();\";\nexamples.fizzBuzzGenerator = \"function* fizzbuzzer(limit) {\\n  for (let i = 1; i < limit; i++) {\\n    if (i % 15 === 0) {\\n      yield 'FizzBuzz';\\n    } else if (i % 3 === 0) {\\n      yield 'Fizz';\\n    } else if (i % 5 === 0) {\\n      yield 'Buzz';\\n    } else {\\n      yield i.toString();\\n    }\\n  }\\n}\\n\\nconst result = Array.from(fizzbuzzer(31));\";\nexamples.insertionSort = \"function insertionSort(array) {\\n  for (let i = 0; i < array.length; i++) {\\n    for (let j = i - 1; j >= 0; j--) {\\n      if (array[j] <= array[j + 1]) {\\n        break;\\n      }\\n\\n      const tmp = array[j + 1];\\n      array[j + 1] = array[j];\\n      array[j] = tmp;\\n    }\\n  }\\n}\\n\\nconst a = [3, 1, 2, 5, 4];\\ninsertionSort(a);\";\nvar _default = examples;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _cloneDeep = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\nvar _attachCodeSlicesToAST = _interopRequireDefault(require(\"./attachCodeSlicesToAST\"));\n\nvar _toNodeKey = _interopRequireDefault(require(\"./toNodeKey\"));\n\nvar _traverseAST = _interopRequireDefault(require(\"./traverseAST\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Holds a group of ASTs that were instrumented together, and allows looking up individual\n * nodes by the combination of AST id and node id (or, equivalently, the composite key).\n * All nodes should have a `biId` field before being passed to this class.\n */\nvar ASTBundle =\n/*#__PURE__*/\nfunction () {\n  function ASTBundle() {\n    _classCallCheck(this, ASTBundle);\n\n    this.asts = {};\n    this.nodesByKey = new Map();\n    this.sources = {};\n  }\n  /**\n   * Clones, adds, and indexes the given AST.\n   * The following fields are added to each AST node method:\n   * - a `biASTId` string field\n   * - a `biKey` string field containing the result of `toNodeKey`\n   * - a `codeSlice` string field\n   * @param {string} astId\n   * @param {Node} ast - root babel node of the AST\n   * @param {string} code - the source code corresponding to the AST\n   */\n\n\n  _createClass(ASTBundle, [{\n    key: \"add\",\n    value: function add(astId, ast, code) {\n      var _this = this;\n\n      ast = (0, _cloneDeep[\"default\"])(ast); // eslint-disable-line no-param-reassign\n\n      (0, _traverseAST[\"default\"])(ast, function (node) {\n        if (!node.biId) {\n          return;\n        }\n\n        node.biASTId = astId; // eslint-disable-line no-param-reassign\n\n        node.biKey = (0, _toNodeKey[\"default\"])(astId, node.biId); // eslint-disable-line no-param-reassign\n\n        _this.nodesByKey.set(node.biKey, node);\n      });\n      (0, _attachCodeSlicesToAST[\"default\"])(ast, code);\n      this.asts[astId] = ast;\n      this.sources[astId] = code;\n    }\n    /**\n     * Retrieve the specified node from the specified AST.\n     * @param {string} astId\n     * @param {number} nodeId\n     * @returns {Node|undefined}\n     */\n\n  }, {\n    key: \"getNode\",\n    value: function getNode(astId, nodeId) {\n      return this.nodesByKey.get((0, _toNodeKey[\"default\"])(astId, nodeId));\n    }\n    /**\n     * Retrieve the specified node using its composite key.\n     * @param {*} nodeKey\n     * @returns {Node|undefined}\n     */\n\n  }, {\n    key: \"getNodeByKey\",\n    value: function getNodeByKey(nodeKey) {\n      return this.nodesByKey.get(nodeKey);\n    }\n    /**\n     * Retrieve all nodes for which a given function returns true.\n     * @param {function} filterFn takes a node and returns true if it should be included in the output\n     * @returns {Node[]} all matching nodes\n     */\n\n  }, {\n    key: \"filterNodes\",\n    value: function filterNodes(filterFn) {\n      var _this2 = this;\n\n      var results = [];\n      Object.keys(this.asts).forEach(function (astId) {\n        (0, _traverseAST[\"default\"])(_this2.asts[astId], function (node) {\n          if (filterFn(node)) {\n            results.push(node);\n          }\n        });\n      });\n      return results;\n    }\n    /**\n     * @returns {Object} a representation of this ASTBundle that can be serialized as JSON\n     *   and later deserialized and loaded using fromJSON\n     */\n\n  }, {\n    key: \"asJSON\",\n    value: function asJSON() {\n      var _this3 = this;\n\n      var asts = {};\n      Object.keys(this.asts).forEach(function (key) {\n        asts[key] = (0, _cloneDeep[\"default\"])(_this3.asts[key]);\n        (0, _traverseAST[\"default\"])(asts[key], function (node) {\n          delete node.biASTId; // eslint-disable-line no-param-reassign\n\n          delete node.biKey; // eslint-disable-line no-param-reassign\n\n          delete node.codeSlice; // eslint-disable-line no-param-reassign\n        });\n      });\n      return {\n        asts: asts,\n        sources: this.sources\n      };\n    }\n    /**\n     * Restores an instance that was saved using asJSON()\n     * @param {Object} input\n     * @returns {ASTBundle}\n     */\n\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(input) {\n      if (!input.asts || !input.sources) {\n        throw new Error('Expected `asts` and `sources` fields');\n      }\n\n      var astb = new ASTBundle();\n      Object.keys(input.asts).forEach(function (key) {\n        astb.add(key, input.asts[key], input.sources[key]);\n      });\n      return astb;\n    }\n  }]);\n\n  return ASTBundle;\n}();\n\nexports[\"default\"] = ASTBundle;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = addNodeIdsToAST;\n\nvar _traverseAST = _interopRequireDefault(require(\"./traverseAST\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Traverse an AST and attach sequential identifiers to each node.\n * @param {Node} ast - the parent which will be annotated along with its descendants\n */\nfunction addNodeIdsToAST(ast) {\n  var nextId = 1;\n  (0, _traverseAST[\"default\"])(ast, function (node) {\n    node.biId = nextId; // eslint-disable-line no-param-reassign\n\n    nextId += 1;\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = copyNodeIdsBetweenASTs;\n\nvar _traverseAST = _interopRequireDefault(require(\"./traverseAST\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Copies all node IDs from one AST to another. This should be called with\n * two ASTs that have exactly the same shape.\n * @param {Node} from\n * @param {Node} to\n * @throws error if the two trees do not have the same number and types of nodes\n */\nfunction copyNodeIdsBetweenASTs(from, to) {\n  var fromNodes = [];\n  var toNodes = [];\n  (0, _traverseAST[\"default\"])(from, function (node) {\n    return fromNodes.push(node);\n  });\n  (0, _traverseAST[\"default\"])(to, function (node) {\n    return toNodes.push(node);\n  });\n\n  if (fromNodes.length !== toNodes.length) {\n    throw new Error(\"Source tree has \".concat(fromNodes.length, \" nodes but destination tree has \").concat(toNodes.length));\n  }\n\n  for (var i = 0; i < fromNodes.length; i += 1) {\n    if (fromNodes[i].type !== toNodes[i].type) {\n      throw new Error(\"Source node type \".concat(fromNodes[i].type, \" does not match destination node type \").concat(toNodes[i].type));\n    }\n\n    toNodes[i].biId = fromNodes[i].biId;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = fromNodeKey;\n\n/**\n * Parses a string composite key for a node back into an AST id and a node id.\n * @param {string} nodeKey\n * @returns {object} object with string property `astId` and number property `nodeId`\n */\nfunction fromNodeKey(nodeKey) {\n  var split = nodeKey.split(':');\n  return {\n    astId: decodeURIComponent(split[0]),\n    nodeId: Number(split[1])\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectGraphAsJson = require(\"object-graph-as-json\");\n\nvar _ASTBundle = _interopRequireDefault(require(\"../ast/ASTBundle\"));\n\nvar _TrevCollection = _interopRequireDefault(require(\"./TrevCollection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Holds an in-memory trace of some instrumented code's execution.\n * This should be attached using a Tracer's addListener() method. Subsequently, any trevs\n * or AST registrations reported by the Tracer will be stored.\n *\n * Trevs are stored in an array in a property named `trevs`. The `data` field of each trev\n * is encoded using object-graph-as-json so that later mutations to the object will not\n * alter the trev.\n *\n * ASTs are stored in an ASTBundle held in the property named `astb`.\n *\n * You can set the property `onChange` to a function, and it will be called after any additions\n * to the `astb` object or the `trevs` array.\n */\nvar ArrayTrace =\n/*#__PURE__*/\nfunction () {\n  function ArrayTrace() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$encoder = _ref.encoder,\n        encoder = _ref$encoder === void 0 ? new _objectGraphAsJson.Encoder() : _ref$encoder;\n\n    _classCallCheck(this, ArrayTrace);\n\n    this.astb = new _ASTBundle[\"default\"]();\n    this.encoder = encoder;\n    this.trevs = [];\n  }\n  /**\n   * @returns {TrevCollection}\n   */\n\n\n  _createClass(ArrayTrace, [{\n    key: \"toTC\",\n    value: function toTC() {\n      return new _TrevCollection[\"default\"](this.trevs, this.astb);\n    }\n  }, {\n    key: \"handleRegisterAST\",\n    value: function handleRegisterAST(astId, ast, code) {\n      this.astb.add(astId, ast, code);\n\n      if (this.onChange) {\n        this.onChange();\n      }\n    }\n  }, {\n    key: \"handleTrev\",\n    value: function handleTrev(trev) {\n      var encoded = _objectSpread({}, trev, {\n        data: this.encoder.encode(trev.data)\n      });\n\n      this.trevs.push(encoded);\n\n      if (this.onChange) {\n        this.onChange();\n      }\n    }\n  }]);\n\n  return ArrayTrace;\n}();\n\nexports[\"default\"] = ArrayTrace;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectGraphAsJson = require(\"object-graph-as-json\");\n\nvar _ASTBundle = _interopRequireDefault(require(\"../ast/ASTBundle\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * If you attach this using Tracer's addListener() method, all the trace evnts will be logged\n * to the console.\n */\nvar ConsoleTraceWriter =\n/*#__PURE__*/\nfunction () {\n  function ConsoleTraceWriter() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$encode = _ref.encode,\n        encode = _ref$encode === void 0 ? false : _ref$encode;\n\n    _classCallCheck(this, ConsoleTraceWriter);\n\n    this.astb = new _ASTBundle[\"default\"]();\n\n    if (encode) {\n      this.encoder = new _objectGraphAsJson.Encoder();\n    }\n  }\n\n  _createClass(ConsoleTraceWriter, [{\n    key: \"handleRegisterAST\",\n    value: function handleRegisterAST(astId, ast, code) {\n      this.astb.add(astId, ast, code); // eslint-disable-next-line no-console\n\n      console.log(\"onRegisterAST id [\".concat(astId, \"] AST:\"));\n\n      if (this.encoder) {\n        console.log(JSON.stringify(ast, null, 2)); // eslint-disable-line no-console\n      } else {\n        console.dir(ast); // eslint-disable-line no-console\n      }\n    }\n  }, {\n    key: \"handleTrev\",\n    value: function handleTrev(trev) {\n      var summary = 'onTrev';\n      var node = this.astb.getNode(trev.astId, trev.nodeId);\n\n      if (node && node.loc && node.loc.start) {\n        summary += \" loc [\".concat(node.loc.start.line, \":\").concat(node.loc.start.column, \"]\");\n      }\n\n      if (node && node.codeSlice) {\n        summary += \" code [\".concat(node.codeSlice, \"]\");\n      }\n\n      summary += ' trev:'; // eslint-disable-next-line no-console\n\n      console.log(summary);\n\n      if (this.encoder) {\n        // eslint-disable-next-line no-console\n        console.log(JSON.stringify(_objectSpread({}, trev, {\n          data: this.encoder.encode(trev.data)\n        }), null, 2));\n      } else {\n        console.dir(trev); // eslint-disable-line no-console\n      }\n    }\n  }]);\n\n  return ConsoleTraceWriter;\n}();\n\nexports[\"default\"] = ConsoleTraceWriter;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar fs = _interopRequireWildcard(require(\"fs\"));\n\nvar _objectGraphAsJson = require(\"object-graph-as-json\");\n\nvar _ASTBundle = _interopRequireDefault(require(\"../ast/ASTBundle\"));\n\nvar _TrevCollection = _interopRequireDefault(require(\"./TrevCollection\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Attach this using a Tracer's addListener() method. All data from the tracer will be\n * written to a file. Each line of the file will be one of the following:\n * - an AST registration, represented as a JSON object containing \"ast\", \"code\", and \"astId\" fields\n * - a trev, represented as JSON, with the data field encoded via object-graph-as-json\n *\n * The FileTraceReader class can load this format back into memory.\n */\nvar FileTraceWriter =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {Object} opts\n   * @param {Encoder} opts.encoder - encoder to apply to data, defaults to a new Encoder()\n   * @param {string} opts.prefix - path & filename, to which a timestamp & extension\n   *    will be appended\n   */\n  function FileTraceWriter(_ref) {\n    var _this = this;\n\n    var _ref$encoder = _ref.encoder,\n        encoder = _ref$encoder === void 0 ? new _objectGraphAsJson.Encoder() : _ref$encoder,\n        _ref$prefix = _ref.prefix,\n        prefix = _ref$prefix === void 0 ? 'trace' : _ref$prefix;\n\n    _classCallCheck(this, FileTraceWriter);\n\n    this.encoder = encoder;\n    this.filename = \"\".concat(prefix, \".\").concat(new Date().getTime(), \".tracebi\");\n    this.ws = fs.createWriteStream(this.filename);\n    this.ws.on('error', function (error) {\n      // eslint-disable-next-line no-console\n      console.error(\"Error while opening or writing to trace file \".concat(_this.filename, \":\")); // eslint-disable-next-line no-console\n\n      console.error(error);\n\n      if (_this.endReject) {\n        _this.endReject(error);\n      }\n    });\n  }\n\n  _createClass(FileTraceWriter, [{\n    key: \"handleRegisterAST\",\n    value: function handleRegisterAST(astId, ast, code) {\n      this.ws.write(JSON.stringify({\n        astId: astId,\n        ast: ast,\n        code: code\n      }));\n      this.ws.write('\\n');\n    }\n  }, {\n    key: \"handleTrev\",\n    value: function handleTrev(trev) {\n      var encoded = _objectSpread({}, trev, {\n        data: this.encoder.encode(trev.data)\n      });\n\n      this.ws.write(JSON.stringify(encoded));\n      this.ws.write('\\n');\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.endReject = reject;\n\n        _this2.ws.end(resolve);\n      });\n    }\n    /**\n     * Read a file created by FileTraceWriter.\n     * @param {string} path\n     * @returns {Promise<TrevCollection>}\n     */\n\n  }], [{\n    key: \"readToTC\",\n    value: function readToTC(path) {\n      return fs.promises.readFile(path, {\n        encoding: 'utf8'\n      }).then(this.parseToTC);\n    }\n    /**\n     * Parse a file created by FileTraceWriter.\n     * @param {string} text - the contents of a trace file\n     * @returns {TrevCollection}\n     */\n\n  }, {\n    key: \"parseToTC\",\n    value: function parseToTC(text) {\n      var astb = new _ASTBundle[\"default\"]();\n      var trevs = [];\n      text.split(/[\\r\\n]+/).forEach(function (line) {\n        if (line.length === 0) {\n          return;\n        }\n\n        var json = JSON.parse(line);\n\n        if (json.ast) {\n          astb.add(json.astId, json.ast, json.code);\n        } else {\n          trevs.push(json);\n        }\n      });\n      return new _TrevCollection[\"default\"](trevs, astb);\n    }\n  }]);\n\n  return FileTraceWriter;\n}();\n\nexports[\"default\"] = FileTraceWriter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * A trace event.\n * @typedef {Object} Trev\n * @property {number} parentId - the id of the enclosing trev on the call stack\n * @property {number} id - an id for this trev, unique within the program's execution\n * @property {(\"expr\"|\"fn-start\"|\"fn-ret\"|\"fn-throw\"|\"fn-pause\"|\"fn-resume\")} type\n * @property {string} astId - identifies the AST to which nodeId belongs\n * @property {number} nodeId - indicates which node of the AST caused this event\n * @property {*} data - varies by type:\n *    - for \"expr\", the result of the expression\n *    - for \"fn-start\", and object containing \"this\", \"arguments\", and a property\n *      for each named parameter\n *    - for \"fn-ret\", the return value\n *    - for \"fn-throw\", the error\n *    - for \"fn-pause\", the value passed to yield or await\n *    - for \"fn-resume\", the value returned from yield or await\n *    Note that listeners such as ArrayTrace may replace this field with a cloned or\n *    encoded version of it.\n * @property {(number|undefined)} fnStartId - for fn-resume trevs, the id of the\n *    original fn-start trev\n */\n\n/**\n * @callback Tracer~handleRegisterAST\n * @param {string} astId - identifier to distinguish the AST from other files' ASTs\n * @param {Node} ast - root babel node of the AST\n * @param {string} code - source code corresponding to the AST\n */\n\n/**\n* @callback Tracer~handleTrev\n* @param {Trev} trev\n*/\n\n/**\n * Instrumented code uses an instance of Tracer to report everything that happens.\n * This class does not save any of the trace information itself; you should use the\n * addListener() method to attach something like an ArrayTrace or ConsoleTraceWriter.\n *\n * You may override the generateId() method if desired. Other methods are for internal use.\n */\nvar Tracer =\n/*#__PURE__*/\nfunction () {\n  function Tracer() {\n    _classCallCheck(this, Tracer);\n\n    this.listeners = [];\n\n    this.onRegisterAST = function () {};\n\n    this.onTrev = function () {};\n\n    this.nextId = 1;\n    this.stack = [];\n  }\n  /**\n   * @returns {number} an ID for a new trev\n   */\n\n\n  _createClass(Tracer, [{\n    key: \"generateId\",\n    value: function generateId() {\n      return this.nextId++; // eslint-disable-line no-plusplus\n    }\n    /**\n     * Registers a listener for tracer events.\n     * @param {object} listener\n     * @param {handleRegisterAST} listener.handleRegisterAST\n     * @param {handleTrev} listener.handleTrev\n     */\n\n  }, {\n    key: \"addListener\",\n    value: function addListener(listener) {\n      var _this = this;\n\n      if (this.listeners.length === 0) {\n        this.onRegisterAST = listener.handleRegisterAST ? listener.handleRegisterAST.bind(listener) : function () {};\n        this.onTrev = listener.handleTrev ? listener.handleTrev.bind(listener) : function () {};\n      } else {\n        this.onRegisterAST = function (astId, ast, code) {\n          _this.listeners.forEach(function (lis) {\n            if (lis.handleRegisterAST) {\n              lis.handleRegisterAST(astId, ast, code);\n            }\n          });\n        };\n\n        this.onTrev = function (trev) {\n          _this.listeners.forEach(function (lis) {\n            if (lis.handleTrev) {\n              lis.handleTrev(trev);\n            }\n          });\n        };\n      }\n\n      this.listeners.push(listener);\n    }\n  }, {\n    key: \"pushContext\",\n    value: function pushContext(id) {\n      this.stack.push(id);\n    }\n  }, {\n    key: \"popContext\",\n    value: function popContext() {\n      this.stack.pop();\n    }\n  }, {\n    key: \"trace\",\n    value: function trace(type, astId, nodeId, data) {\n      var more = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n      var id = this.generateId();\n      var parentId = this.stack[this.stack.length - 1];\n      this.onTrev(_objectSpread({\n        parentId: parentId,\n        id: id,\n        type: type,\n        astId: astId,\n        nodeId: nodeId,\n        data: data\n      }, more));\n      return id;\n    }\n  }, {\n    key: \"traceExpr\",\n    value: function traceExpr(astId, nodeId, value) {\n      this.trace('expr', astId, nodeId, value);\n      return value;\n    }\n  }, {\n    key: \"traceFnStart\",\n    value: function traceFnStart(astId, nodeId, callData) {\n      var id = this.trace('fn-start', astId, nodeId, callData);\n      this.pushContext(id);\n      return id;\n    }\n  }, {\n    key: \"traceFnRet\",\n    value: function traceFnRet(astId, nodeId, value) {\n      this.trace('fn-ret', astId, nodeId, value);\n      this.popContext();\n      return value;\n    }\n  }, {\n    key: \"traceFnThrow\",\n    value: function traceFnThrow(astId, nodeId, error) {\n      this.trace('fn-throw', astId, nodeId, error);\n      this.popContext();\n      return error;\n    }\n  }, {\n    key: \"traceFnPause\",\n    value: function traceFnPause(astId, nodeId, argument) {\n      this.trace('fn-pause', astId, nodeId, argument);\n      this.popContext();\n      return argument;\n    }\n  }, {\n    key: \"traceFnResume\",\n    value: function traceFnResume(astId, nodeId, value, fnStartId) {\n      var id = this.trace('fn-resume', astId, nodeId, value, {\n        fnStartId: fnStartId\n      });\n      this.pushContext(id);\n      return value;\n    }\n  }]);\n\n  return Tracer;\n}();\n\nexports[\"default\"] = Tracer;","// TODO babel probably provides a better way to do this\nfunction findNodes(object) {\n  if (object == null || typeof object !== 'object') {\n    return [];\n  }\n\n  if (Array.isArray(object)) {\n    return object.flatMap(findNodes);\n  }\n\n  if (object.type) {\n    return [object];\n  }\n\n  return Object.keys(object).flatMap(k => findNodes(object[k]));\n}\n\n/**\n * Finds the direct children of the given Babel node.\n * @param {Node} node\n * @returns {Node[]}\n */\nexport default function findChildNodes(node) {\n  return Object.keys(node).flatMap(k => findNodes(node[k]));\n}","import React from 'react';\nimport './AnnotatedCode.css';\nimport findChildNodes from '../../util/findChildNodes';\n\nfunction CodeForNode({\n  code,\n  highlightedNodeKey,\n  node,\n  onHoveredNodeChange,\n  onNodeSelectedToggle,\n  selectedNodeKeys,\n}) {\n  const { biKey: nodeKey, start, end } = node;\n  let cur = start;\n  const elements = [];\n\n  // For code using shorthand object property notation, i.e. `{x}` instead of `{x: x}`,\n  // there are three nodes corresponding to the code `x`: the ObjectProperty, ObjectProperty.id,\n  // and ObjectProperty.value. This special case is here to avoid displaying `x` multiple times,\n  // and to make sure the one we display is the one that trevs will actually be attached to.\n  if (node.type === 'ObjectProperty' && node.shorthand) {\n    return <CodeForNode key={node.value.biKey}\n                        highlightedNodeKey={highlightedNodeKey}\n                        node={node.value}\n                        selectedNodeKeys={selectedNodeKeys}\n                        code={code}\n                        onHoveredNodeChange={onHoveredNodeChange}\n                        onNodeSelectedToggle={onNodeSelectedToggle} />;\n  }\n\n  // TODO does this sorting need to look at 'end' too?\n  const children = findChildNodes(node).sort((a, b) => a.start - b.start);\n  for (const child of children) {\n    if (cur < child.start) {\n      elements.push(code.slice(cur, child.start));\n    }\n    \n    elements.push(\n      <CodeForNode key={child.biKey}\n                     highlightedNodeKey={highlightedNodeKey}\n                     node={child}\n                     selectedNodeKeys={selectedNodeKeys}\n                     code={code}\n                     onHoveredNodeChange={onHoveredNodeChange}\n                     onNodeSelectedToggle={onNodeSelectedToggle} />\n    );\n\n    cur = child.end;\n  }\n\n  if (cur < end) {\n    elements.push(code.slice(cur, end));\n  }\n\n  const handleMouseOver = nodeKey && onHoveredNodeChange ? (event) => {\n    onHoveredNodeChange(nodeKey);\n    event.stopPropagation();\n  } : null;\n\n  const handleClick = nodeKey && onNodeSelectedToggle ? (event) => {\n    onNodeSelectedToggle(nodeKey);\n    event.stopPropagation();\n  } : null;\n\n  const className = [\n    nodeKey && nodeKey === highlightedNodeKey ? 'highlighted' : '',\n    nodeKey && selectedNodeKeys.includes(nodeKey) ? 'selected' : '',\n  ].join(' ')\n\n  return <span className={className}\n               onClick={handleClick}\n               onMouseOver={handleMouseOver}>\n    {elements}\n  </span>\n}\n\nfunction AnnotatedCodeView({\n  ast,\n  highlightedNodeKey,\n  onHoveredNodeChange = null,\n  onNodeSelectedToggle = null,\n  selectedNodeKeys = [],\n}) {\n  const clearHover = onHoveredNodeChange ? () => onHoveredNodeChange(null) : null;\n  return (\n    <pre className=\"AnnotatedCode\" onMouseLeave={clearHover}>\n      <code>\n        <CodeForNode highlightedNodeKey={highlightedNodeKey}\n                       node={ast}\n                       selectedNodeKeys={selectedNodeKeys}\n                       code={ast.codeSlice}\n                       onHoveredNodeChange={onHoveredNodeChange}\n                       onNodeSelectedToggle={onNodeSelectedToggle} />\n      </code>\n    </pre>\n  );\n}\n\nexport default AnnotatedCodeView;","import React from 'react';\nimport './ASTNav.css';\n\nfunction locString({ start, end }) {\n  return '' + start.line + ':' + start.column + '-' +\n    end.line + ':' + end.column;\n}\n\nfunction ASTObjectView({\n  highlightedNodeKey,\n  object,\n  onHoveredNodeChange,\n  onNodeSelectedToggle,\n  selectedNodeKeys,\n}) {\n  const {\n    biId: nodeId,\n    biKey: nodeKey,\n    type,\n    loc,\n    // eslint-disable-next-line no-unused-vars\n    biASTId,\n    // eslint-disable-next-line no-unused-vars\n    start,\n    // eslint-disable-next-line no-unused-vars\n    end,\n    // eslint-disable-next-line no-unused-vars\n    codeSlice,\n    ...rest\n  } = object;\n\n  const typeEl = type ? <span className=\"type\">{type}</span> : null;\n  const nodeIdEl = nodeId ? <span className=\"nodeId\">{nodeId}</span> : null;\n  const locEl = loc ? <span className=\"loc\">{locString(loc)}</span> : null; //TODO\n\n  const entries = [];\n\n  for (const key in rest) {\n    const val = rest[key];\n\n    if ((Array.isArray(val) && val.length === 0) ||\n        (typeof val === 'object' && (val == null || Object.keys(val).length === 0)) ||\n        typeof val === 'undefined') {\n      // don't display it\n    }\n    else if (Array.isArray(val)) {\n      entries.push([1, key,\n        <ol>\n          {val.map((item, index) => (\n            <li key={index}>\n              <ASTObjectView object={item}\n                             highlightedNodeKey={highlightedNodeKey}\n                             onHoveredNodeChange={onHoveredNodeChange}\n                             onNodeSelectedToggle={onNodeSelectedToggle}\n                             selectedNodeKeys={selectedNodeKeys} />\n            </li>\n          ))}\n        </ol>\n      ]);\n    } else if (typeof val === 'object' && val != null) {\n      entries.push([1, key,\n        <ASTObjectView object={val}\n                       highlightedNodeKey={highlightedNodeKey}\n                       onHoveredNodeChange={onHoveredNodeChange}\n                       onNodeSelectedToggle={onNodeSelectedToggle}\n                       selectedNodeKeys={selectedNodeKeys} />\n      ]);\n    } else {\n      entries.push([0, key, <span className=\"primitive\">{JSON.stringify(val)}</span>]);\n    }\n  }\n\n  entries.sort();\n\n  const handleMouseOver = nodeKey && onHoveredNodeChange ? (event) => {\n    onHoveredNodeChange(nodeKey);\n    event.stopPropagation();\n  } : null;\n\n  const handleClick = nodeKey && onNodeSelectedToggle ? (event) => {\n    onNodeSelectedToggle(nodeKey);\n    event.stopPropagation();\n  } : null;\n\n  const className = [\n    'object',\n    nodeKey ? 'node' : null,\n    nodeKey && nodeKey === highlightedNodeKey ? 'highlighted' : null,\n    nodeKey && selectedNodeKeys.includes(nodeKey) ? 'selected' : null,\n  ].join(' ');\n\n  return (\n    <div className={className} onMouseOver={handleMouseOver} onClick={handleClick}>\n      {nodeIdEl} {typeEl} {locEl}\n      <dl>\n        {entries.map(([_, key, val], index) =>\n          [\n            <dt key={'k' + index}>{key}</dt>,\n            <dd key={'v' + index}>{val}</dd>\n          ]\n        )}\n      </dl>\n    </div>\n  );\n}\n\nfunction ASTNavView({\n  ast,\n  highlightedNodeKey,\n  onHoveredNodeChange = null,\n  onNodeSelectedToggle = null,\n  selectedNodeKeys = [],\n}) {\n  const clearHover = onHoveredNodeChange ? () => onHoveredNodeChange(null) : null;\n\n  return (\n    <div className=\"ASTNav\" onMouseLeave={clearHover}>\n      <ASTObjectView object={ast}\n                     highlightedNodeKey={highlightedNodeKey}\n                     onHoveredNodeChange={onHoveredNodeChange}\n                     onNodeSelectedToggle={onNodeSelectedToggle}\n                     selectedNodeKeys={selectedNodeKeys} />\n    </div>\n  );\n}\n\nexport default ASTNavView;\n","import React from 'react';\nimport './SmallDataPreview.css';\n\nexport default function SmallDataPreviewView({ data, trevType }) {\n  const output = [];\n  let outputKey = 1;\n\n  function recurse(current, classes = '', top = false) {\n    if (current === undefined) {\n      return;\n    } else if (current === null) {\n      output.push(<span key={outputKey++} className={`preview-null ${classes}`}>null</span>);\n      return;\n    }\n  \n    switch (typeof current) {\n      case 'number':\n        output.push(<span key={outputKey++} className={`preview-number ${classes}`}>{current}</span>);\n        return;\n      case 'boolean':\n        output.push(<span key={outputKey++} className={`preview-boolean ${classes}`}>{current.toString()}</span>);\n        return;\n      case 'string':\n        output.push(<span key={outputKey++} className={`preview-string ${classes}`}>{JSON.stringify(current)}</span>);\n        return;\n      case 'object':\n        switch (current.type) {\n          case 'array':\n            {\n              const keys = Object.keys(current);\n              output.push(<span key={outputKey++} className=\"preview-array-start\">[</span>);\n              let count = 0;\n              let fixedWidth = top;\n              for (let i = 0; i < keys.length; i++) {\n                const key = keys[i];\n                if (key === 'type' || key === 'id') {\n                  continue;\n                }\n                if (count > 0) {\n                  output.push(<span key={outputKey++} className=\"preview-array-comma\">,</span>);\n                }\n                if (count > 4 || key !== `.${count}`) {\n                  output.push(<span key={outputKey++} className=\"preview-array-more\">...</span>);\n                  break;\n                }\n                fixedWidth = fixedWidth\n                              && (current[key] === null\n                                  || typeof current[key] === 'boolean'\n                                  || typeof current[key] === 'number');\n                count++;\n                recurse(current[key], fixedWidth ? 'preview-array-fixed-element' : '');\n              }\n              output.push(<span key={outputKey++} className=\"preview-array-end\">]</span>);\n              return;\n            }\n          case 'bigint':\n            output.push(<span key={outputKey++} className={`preview-bigint ${classes}`}>{current.string}</span>);\n            return;\n          case 'builtin':\n            output.push(<span key={outputKey++} className={`preview-builtin ${classes}`}>{current.name}</span>);\n            return;\n          case 'function':\n            if (current['.name'] && current['.name'].value) {\n              output.push(<span key={outputKey++} className={`preview-function ${classes}`}>{current['.name'].value}</span>);\n            } else {\n              let truncated = current.source.slice(0, 20);\n              if (truncated.length < current.source.length) {\n                truncated += '...';\n              }\n              output.push(<span key={outputKey++} className={`preview-function ${classes}`}>{truncated}</span>);\n            }\n            return;\n          case 'object':\n            {\n              output.push(<span key={outputKey++} className=\"preview-object-start\">{'{'}</span>);\n              let more = false;\n              const keys = Object.keys(current);\n              let count = 0;\n              for (let i = 0; i < keys.length; i++) {\n                const key = keys[i];\n                if (key === 'type' || key === 'id') {\n                  continue;\n                }\n                if (top && (key === '.arguments' || key === '.this') && trevType === 'fn-start') {\n                  more = true;\n                  continue;\n                }\n                if (key === 'prototype') {\n                  more = true;\n                  continue;\n                }\n                if (count > 4 || !key.startsWith('.')) {\n                  more = true;\n                  break;\n                }\n                if (count > 0) {\n                  output.push(<span key={outputKey++} className=\"preview-object-comma\">,</span>);\n                }\n                count++;\n                output.push(<span key={outputKey++} className=\"preview-object-key\">{key.slice(1)}</span>);\n                output.push(<span key={outputKey++} className=\"preview-object-colon\">:</span>);\n                recurse(current[key]);\n              }\n              if (more) {\n                if (count > 0) {\n                  output.push(<span key={outputKey++} className=\"preview-object-comma\">,</span>);\n                }\n                output.push(<span key={outputKey++} className=\"preview-object-more\">...</span>);\n              }\n              output.push(<span key={outputKey++} className=\"preview-object-end\">{'}'}</span>);\n              return;\n            }\n          case 'symbol':\n            if (current.description) {\n              output.push(<span key={outputKey++} className={`preview-symbol ${classes}`}>~{current.description}</span>);\n            } else {\n              output.push(<span key={outputKey++} className={`preview-symbol ${classes}`}>~{current.id}</span>);\n            }\n            return;\n          default:\n            output.push(JSON.stringify(current));\n            return;\n        }\n      default:\n        output.push('???');\n        return;\n    }\n  }\n\n  recurse(data, '', true);\n\n  return output;\n}\n","import React from 'react';\nimport SmallDataPreview from '../SmallDataPreview';\nimport './TrevTable.css';\n\nfunction TrevTableView({\n  trevs,\n  highlightedTrevId,\n  highlightedNodeKey,\n  onHoveredTrevChange = (trevId) => {},\n  onNodeSelectedToggle = (nodeKey) => {},\n  onOpenModalData = (modalData) => {},\n  onTrevTypeSelectedToggle = (type) => {},\n}) {\n  const entries = [];\n\n  for (const trev of trevs) {\n    const handleMouseOver = onHoveredTrevChange ? (ev) => {\n      onHoveredTrevChange(trev.id);\n    } : null;\n\n    const className = [\n      highlightedTrevId != null && trev.id === highlightedTrevId ? 'highlighted-trev' : null,\n      highlightedTrevId != null && trev.denormalized.ancestorIds.includes(highlightedTrevId) ? 'highlighted-trev-descendant' : null,\n      highlightedNodeKey != null && trev.denormalized.node.biKey === highlightedNodeKey ? 'highlighted-node' : null,\n    ].join(' ');\n\n    const handleTypeClick = () => onTrevTypeSelectedToggle(trev.type);\n    const handleCodeClick = () => onNodeSelectedToggle(trev.denormalized.node.biKey);\n\n    entries.push(\n      <tr key={trev.id} onMouseOver={handleMouseOver} className={className}>\n        <td className=\"parent-id\">{trev.parentId}</td>\n        <td className=\"id\">{trev.id}</td>\n        <td className=\"type\" onClick={handleTypeClick}>{trev.type}</td>\n        <td className=\"node\" onClick={handleCodeClick}>\n          <code>{trev.denormalized.node.codeSlice}</code>\n        </td>\n        <td className=\"data\" onClick={() => onOpenModalData({data: trev.data})}>\n          <SmallDataPreview data={trev.data} trevType={trev.type} />\n        </td>\n      </tr>\n    );\n  }\n\n  const clearHover = onHoveredTrevChange ? () => onHoveredTrevChange(null) : null;\n\n  return (\n    <div className=\"TrevTable\">\n      <table onMouseLeave={clearHover}>\n        <thead>\n          <tr>\n            <th className=\"parent-id\">parent</th>\n            <th className=\"id\">id</th>\n            <th className=\"type\">type</th>\n            <th className=\"node\">code</th>\n            <th className=\"data\">data</th>\n          </tr>\n        </thead>\n        <tbody>\n          {entries}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TrevTableView;\n","import React from 'react';\nimport './TraceQueryForm.css';\nimport update from 'immutability-helper';\nimport Select from 'react-select';\n\nexport function TraceQueryFormView({\n  onTraceQueryChange = (query) => {},\n  onPlay = () => {},\n  onStop = () => {},\n  isPlaying,\n  query,\n  tc,\n  astNames,\n}) {\n  function nodeOption(node, count) {\n    const value = node.biKey;\n    const prefix = Object.keys(astNames).length > 1 ? `${astNames[node.biASTId]}:` : '';\n    const codeSlice = node.codeSlice;\n    const codePreview = codeSlice.length > 20 ? codeSlice.slice(0, 20) + '...' : codeSlice;\n    let label = `[${prefix}${node.biId}] ${node.type}: ${codePreview}`;\n    if (count !== undefined) {\n      label += ` (${count})`;\n    }\n    return { value, label };\n  }\n\n  const facets = tc.getFacets();\n  \n  const nodesOptions = Array.from(facets.nodes.entries()).map(\n    ([node, count]) => nodeOption(node, count));\n\n  const nodesValue = Object.keys(query.nodes).filter((key) => query.nodes[key]).map(\n    (nodeKey) => nodeOption(tc.astb.getNodeByKey(nodeKey)));\n\n  const nodeTypesOptions = Array.from(facets.nodeTypes.entries()).map(\n    ([type, count]) => ({ value: type, label: `${type} (${count})` }),\n  );\n  const nodeTypesValue = Object.keys(query.nodeTypes).filter((key) => query.nodeTypes[key]).map(\n    (type) => ({ value: type, label: type }),\n  );\n\n  const typesOptions = Array.from(facets.types.entries()).map(\n    ([type, count]) => ({ value: type, label: `${type} (${count})` }),\n  );\n  const typesValue = Object.keys(query.types).filter((key) => query.types[key]).map(\n    (type) => ({ value: type, label: type }),\n  );\n\n  const handleNodesChange = (value) => {\n    const nodes = {};\n    (value || []).forEach((selected) => {\n      nodes[selected.value] = true;\n    });\n    onTraceQueryChange(update(query, { nodes: { $set: nodes }}));\n  };\n\n  const handleNodeTypesChange = (value) => {\n    const nodeTypes = {};\n    (value || []).forEach((selected) => {\n      nodeTypes[selected.value] = true;\n    });\n    onTraceQueryChange(update(query, { nodeTypes: { $set: nodeTypes } }));\n  };\n\n  const handleTypesChange = (value) => {\n    const types = {};\n    (value || []).forEach((selected) => {\n      types[selected.value] = true;\n    });\n    onTraceQueryChange(update(query, { types: {$set: types } }));\n  };\n\n  return (\n    <form className=\"TraceQueryForm\">\n      <div className=\"filter\">\n        <label className=\"label\" id=\"node-filters-label\">Nodes:</label>\n        <Select className=\"filter-select\"\n                classNamePrefix=\"filter-select\"\n                isMulti\n                options={nodesOptions}\n                value={nodesValue}\n                onChange={handleNodesChange}\n                placeholder=\"(all)\"\n                aria-labelledby=\"node-filters-select\" />\n      </div>\n\n      <div className=\"filter\">\n        <label className=\"label\" id=\"node-type-filters-label\">Node types:</label>\n        <Select className=\"filter-select\"\n                classNamePrefix=\"filter-select\"\n                isMulti\n                options={nodeTypesOptions}\n                value={nodeTypesValue}\n                onChange={handleNodeTypesChange}\n                placeholder=\"(all)\"\n                aria-labelledby=\"node-type-filters-label\" />\n      </div>\n\n      <div className=\"filter\">\n        <label className=\"label\" id=\"type-filters-label\">Trev types:</label>\n        <Select className=\"filter-select\"\n                classNamePrefix=\"filter-select\"\n                isMulti\n                options={typesOptions}\n                value={typesValue}\n                onChange={handleTypesChange}\n                placeholder=\"(all)\"\n                aria-labelledby=\"type-filters-label\" />\n      </div>\n\n      <div className=\"walkthrough-controls\">\n        { isPlaying ?\n          <button onClick={(event) => { event.preventDefault(); onStop(); }}>&#9209;</button>\n          :\n          <button onClick={(event) => { event.preventDefault(); onPlay(); }}>&#9654;</button>\n        }\n      </div>\n    </form>\n  );\n}\n\nexport default TraceQueryFormView;\n","import React from 'react';\nimport './LargeDataPreview.css';\n\nexport default function LargeDataPreviewView({ data }) {\n  switch (typeof data) {\n    case 'boolean':\n      return <p className=\"LargeDataPreview boolean\">{data.toString()}</p>;\n    case 'string':\n      return <pre className=\"LargeDataPreview string\">{data}</pre>;\n    case 'number':\n      return <p className=\"LargeDataPreview number\">{data}</p>;\n    default:\n      return <pre className=\"LargeDataPreview object\"><code>{JSON.stringify(data, null, 2)}</code></pre>;\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport AnnotatedCode from '../AnnotatedCode';\nimport ASTNav from '../ASTNav';\nimport TrevTable from '../TrevTable';\nimport TraceQueryForm from '../TraceQueryForm';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport examples from 'blunt-instrument-test-resources';\nimport ReactJson from 'react-json-view';\nimport Modal from 'react-modal';\nimport update from 'immutability-helper';\nimport FileSaver from 'file-saver';\nimport LargeDataPreview from '../LargeDataPreview';\nimport buildASTNames from '../../util/buildASTNames';\n\nfunction AppView({\n  tc,\n  filteredTC,\n  traceQuery,\n  highlightedTrevId,\n  highlightedNodeKey,\n  onTraceQueryChange,\n  onHoveredTrevChange,\n  onHoveredNodeChange,\n  onLoadByFile,\n  onLoadByPaste,\n  onNodeSelectedToggle,\n  onRun,\n  onSourceDraftChange,\n  onOpenModalData,\n  onCloseModalData,\n  onPlay,\n  onStop,\n  isPlaying,\n  modalData,\n  status,\n  sourceDraft,\n}) {\n  function runHandler(source) {\n    return (event) => {\n      event.preventDefault();\n      onRun(source);\n    }\n  }\n\n  const onChangeSelectedExample = event => {\n    onRun(examples[event.target.value] || '');\n  }\n\n  const selectedNodeKeys = Object.keys(traceQuery.nodes).filter((key) => traceQuery.nodes[key]);\n\n  const handleSourceDraftChange =\n    (event) => onSourceDraftChange(event.target.value);\n  \n  let selectedExample = '';\n  const exampleOptions = [<option key=\"BLANK\" value=\"\"></option>];\n  for (const key in examples) {\n    exampleOptions.push(<option key={key} value={key}>{key}</option>);\n    if (sourceDraft === examples[key]) {\n      selectedExample = key;\n    }\n  }\n\n  let runStatus = <p className=\"status\">&nbsp;</p>; // TODO terrible hack, keeps button style consistent in Safari\n  let loadStatus = <p className=\"status\" />;\n  switch (status.action) {\n    case 'run':\n      if (status.error) {\n        runStatus = <p className=\"status error\">{status.error.toString()}</p>;\n      } else if (status.tracedError) {\n        runStatus = <p className=\"status warning\">Ran and received error: {status.tracedError.toString()}</p>;\n      } else {\n        runStatus = <p className=\"status\">Ran successfully.</p>;\n      }\n      break;\n    case 'load':\n      if (status.error) {\n        loadStatus = <p className=\"status error\">{status.error.toString()}</p>;\n      } else {\n        loadStatus = <p className=\"status\">Loaded trace successfully.</p>;\n      }\n      break;\n    default:\n  }\n\n  const handleTrevTypeSelectedToggle = (type) => {\n    onTraceQueryChange(update(traceQuery, { types: { $toggle: [type] } }));\n  };\n\n  const handleLoadByPaste = (event) => {\n    const text = (event.clipboardData || window.clipboardData).getData('text');\n    if (text) {\n      onLoadByPaste(text);\n    }\n    event.preventDefault();\n  }\n\n  const handleSaveFile = (event) => {\n    const text = JSON.stringify(tc.asJSON(), null, 2);\n    const blob = new Blob([text], { type: 'application/json' });\n    FileSaver.saveAs(blob, 'trace.json');\n  };\n\n  const handleLoadFile = (event) => {\n    const files = event.target.files;\n    if (files.length < 1) {\n      return;\n    }\n    onLoadByFile(files[0]);\n  };\n\n  const astIds = Object.keys(tc.astb.asts);\n  astIds.sort();\n  const astNames = buildASTNames(astIds);\n\n  return (\n    <div className=\"App\">\n      <div className=\"control-tabs\">\n        <Tabs>\n          <TabList>\n            <Tab>Run</Tab>\n            <Tab>Save</Tab>\n            <Tab>Load</Tab>\n          </TabList>\n\n          <TabPanel>\n            <form className=\"source-form\">\n              <p className=\"instructions\">\n                Enter javascript code &amp; click Run, or choose an example:\n                <select title=\"Choose an example\" value={selectedExample} onChange={onChangeSelectedExample}>\n                  {exampleOptions}\n                </select>\n              </p>\n              <textarea title=\"Enter source code to run\"\n                        value={sourceDraft} onChange={handleSourceDraftChange}\n                        autoComplete=\"false\"\n                        autoCorrect=\"false\"\n                        spellCheck=\"false\" />\n              <div className=\"status-area\">\n                <button className=\"run\" onClick={runHandler(sourceDraft)}>Run</button>\n                {runStatus}\n              </div>\n            </form>\n          </TabPanel>\n\n          <TabPanel>\n            <div className=\"save-form\">\n              <p>You can export the trace &amp; AST to load later.</p>\n              <ul>\n                <li><button className=\"view-save\" onClick={() => onOpenModalData(tc.asJSON())}>View JSON in browser</button></li>\n                <li>Or <button className=\"file-save\" onClick={handleSaveFile}>save to file</button></li>\n              </ul>\n            </div>\n          </TabPanel>\n          \n          <TabPanel>\n            <div className=\"load-form\">\n              <p>You can load a `.json` file saved by this UI or a `.tracebi` file saved by FileTraceWriter.</p>\n              <ul>\n                <li>\n                  <label htmlFor=\"load-paste\">Paste the JSON here: </label>\n                  <input id=\"load-paste\" value=\"\" type=\"text\" onChange={() => {}} onPaste={handleLoadByPaste} />\n                </li>\n                <li>\n                  <label htmlFor=\"load-file\">Or load from a file: </label>\n                  <input id=\"load-file\" value=\"\" type=\"file\" accept=\".json, .tracebi\" onChange={handleLoadFile} />\n                </li>\n              </ul>\n              <div className=\"status-area\">\n                {loadStatus}\n              </div>\n            </div>\n          </TabPanel>\n        </Tabs>\n      </div>\n\n      <div className=\"code-tabs\">\n        <Tabs>\n          <TabList>\n            <Tab>Code</Tab>\n            <Tab>AST</Tab>\n            <Tab>AST JSON</Tab>\n            {tc.astb.instrumentedAST ? <Tab>Instrumented Code</Tab> : null}\n          </TabList>\n\n          <TabPanel>\n            {astIds.map((astId) => <section key={astId}>\n              {astIds.length > 1 ? <h1>{astNames[astId]}</h1> : null}\n              <AnnotatedCode ast={tc.astb.asts[astId]}\n                             highlightedNodeKey={highlightedNodeKey}\n                             onHoveredNodeChange={onHoveredNodeChange}\n                             onNodeSelectedToggle={onNodeSelectedToggle}\n                             selectedNodeKeys={selectedNodeKeys} />\n            </section>)}\n          </TabPanel>\n\n          <TabPanel>\n            {astIds.map((astId) => <section key={astId}>\n              {astIds.length > 1 ? <h1>{astNames[astId]}</h1> : null}\n              <ASTNav ast={tc.astb.asts[astId]}\n                      highlightedNodeKey={highlightedNodeKey}\n                      onHoveredNodeChange={onHoveredNodeChange}\n                      onNodeSelectedToggle={onNodeSelectedToggle}\n                      selectedNodeKeys={selectedNodeKeys} />\n            </section>)}\n          </TabPanel>\n\n          <TabPanel>\n            <ReactJson src={tc.astb.asJSON()} name={false} />\n          </TabPanel>\n          \n          {tc.astb.instrumentedAST ?\n            <TabPanel>\n              <AnnotatedCode ast={tc.astb.instrumentedAST}\n                            highlightedNodeKey={highlightedNodeKey}\n                            onHoveredNodeChange={onHoveredNodeChange}\n                            onNodeSelectedToggle={onNodeSelectedToggle}\n                            selectedNodeKeys={selectedNodeKeys} />\n            </TabPanel> : null}\n        </Tabs>\n      </div>\n\n      <TraceQueryForm onTraceQueryChange={onTraceQueryChange}\n                      onNodeSelectedToggle={onNodeSelectedToggle}\n                      tc={tc}\n                      query={traceQuery}\n                      onPlay={onPlay}\n                      onStop={onStop}\n                      isPlaying={isPlaying}\n                      astNames={astNames} />\n\n      <div className=\"trev-tabs\">\n        <Tabs>\n          <TabList>\n            <Tab>Trace Events</Tab>\n            <Tab>Trevs JSON</Tab>\n          </TabList>\n          \n          <TabPanel>\n            <TrevTable trevs={filteredTC.trevs}\n                      highlightedTrevId={highlightedTrevId}\n                      highlightedNodeKey={highlightedNodeKey}\n                      onHoveredTrevChange={onHoveredTrevChange}\n                      onNodeSelectedToggle={onNodeSelectedToggle}\n                      onOpenModalData={onOpenModalData}\n                      onTrevTypeSelectedToggle={handleTrevTypeSelectedToggle} />\n          </TabPanel>\n\n          <TabPanel>\n            <ReactJson src={filteredTC.withoutDenormalizedInfo().trevs}\n                       name={false}\n                       displayDataTypes={false} />\n          </TabPanel>\n        </Tabs>\n      </div>\n\n      <div className=\"large-data-preview\">\n        {highlightedTrevId ? <LargeDataPreview data={tc.getTrev(highlightedTrevId).data} /> : <p></p>}\n      </div>\n\n      <div className=\"blurb\">\n        created by <a href=\"https://brokensandals.net\">brokensandals</a> | documentation and source code on <a href=\"https://github.com/brokensandals/blunt-instrument\">github</a>\n      </div>\n\n      <Modal isOpen={modalData !== undefined}\n             onRequestClose={onCloseModalData}\n             contentLabel=\"Data Inspector\"\n             shouldCloseOnOverlayClick={true}>\n        <ReactJson src={modalData}\n                   name={false}\n                   displayDataTypes={false} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default AppView;\n","/**\n * Builds display names for given AST ids.\n * This splits the ids by '/' then removes all common leading components.\n * For example, ['/foo/bar/baz.js', '/foo/wat/meh.js'] would yield\n * { '/foo/bar/baz.js': 'bar/baz.js', '/foo/wat/meh.js': 'wat/meh.js' }\n *\n * @param {string[]} astIds\n * @returns {object} keys are AST ids, values are names\n */\nexport default function buildASTNames(astIds) {\n  if (astIds.length === 0) {\n    return {};\n  }\n\n  const partArrays = astIds.map((id) => id.split('/'));\n  while (partArrays.every((array) => array.length > 1 && array[0] === partArrays[0][0])) {\n    partArrays.forEach((array) => array.shift());\n  }\n\n  const names = partArrays.map((array) => array.join('/'));\n  const result = {};\n  for (let i = 0; i < astIds.length; i += 1) {\n    result[astIds[i]] = names[i];\n  }\n\n  return result;\n}\n","/**\n * Determines whether an element is currently visible within a scrollable ancestor.\n * @param {*} target the element you want to be visible\n * @param {*} container the scrollable ancestor element\n * @param {*} min the minimum number of pixels of target that need to be visible\n * @returns {boolean} true if the minimum number of pixels is visible\n */\nexport default function isVisibleWithin(target, container, min = 5) {\n  const tr = target.getBoundingClientRect();\n  const cr = container.getBoundingClientRect();\n  return !(\n    cr.bottom - min < tr.top\n    || cr.top + min > tr.bottom\n    || cr.right - min < tr.left\n    || cr.left + min > tr.right\n  );\n}\n","import React from 'react';\nimport update from 'immutability-helper';\nimport AppView from './AppView';\nimport examples from 'blunt-instrument-test-resources';\nimport instrumentedEval from 'blunt-instrument-eval';\nimport { TrevCollection } from 'blunt-instrument-core';\nimport { FileTraceWriter } from 'blunt-instrument-core';\nimport isVisibleWithin from '../../util/isVisibleWithin';\n\nconst defaultQueryState = {\n  traceQuery: {\n    nodes: {},\n    nodeTypes: {},\n    types: {},\n  },\n  highlightedTrevId: null,\n  highlightedNodeKey: null,\n}\n\nclass AppContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {...defaultQueryState};\n    Object.assign(this.state, this.doRun(examples.factorial));\n\n    this.handleTraceQueryChange = this.handleTraceQueryChange.bind(this);\n    this.handleHoveredTrevChange = this.handleHoveredTrevChange.bind(this);\n    this.handleHoveredNodeChange = this.handleHoveredNodeChange.bind(this);\n    this.handleLoadByPaste = this.loadFromJSONText.bind(this);\n    this.handleLoadByFile = this.handleLoadByFile.bind(this);\n    this.handleNodeSelectedToggle = this.handleNodeSelectedToggle.bind(this);\n    this.handleRun = this.handleRun.bind(this);\n    this.handleSourceDraftChange = this.handleSourceDraftChange.bind(this);\n    this.handleOpenModalData = this.handleOpenModalData.bind(this);\n    this.handleCloseModalData = this.handleCloseModalData.bind(this);\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n  }\n\n  componentDidUpdate() {\n    // TODO this is a very lazy, hacky, inefficient implementation of ensuring the highlighted\n    // elements are scrolled into view\n    document.querySelectorAll('.code-tabs .react-tabs__tab-panel').forEach((codePanel) => {\n      const highlightedNodeEl = codePanel.querySelector('.highlighted');\n      if (highlightedNodeEl && !isVisibleWithin(highlightedNodeEl, codePanel)) {\n        highlightedNodeEl.scrollIntoView({ behavior: 'smooth' });\n      }\n    });\n\n    document.querySelectorAll('.trev-tabs .react-tabs__tab-panel').forEach((trevPanel) => {\n      const highlightedTrevEl = trevPanel.querySelector('.highlighted-trev');\n      if (highlightedTrevEl) {\n        if (!isVisibleWithin(highlightedTrevEl, trevPanel)) {\n          highlightedTrevEl.scrollIntoView({ behavior: 'smooth' });\n        }\n        return;\n      }\n\n      const highlightedNodeEls = trevPanel.querySelectorAll('.highlighted-node');\n      if (highlightedNodeEls.length > 0 && !Array.from(highlightedNodeEls).some((el) => isVisibleWithin(el, trevPanel))) {\n        highlightedNodeEls[0].scrollIntoView({ behavior: 'smooth' });\n      }\n    });\n  }\n\n  handleTraceQueryChange(traceQuery) {\n    this.setState(this.doQuery(this.state.tc, traceQuery));\n  }\n\n  handleHoveredTrevChange(id) {\n    this.handleHoveredNodeChange(id == null ? null : this.state.tc.getTrev(id).denormalized.node.biKey);\n    this.setState({ highlightedTrevId: id });\n  }\n\n  handleHoveredNodeChange(nodeKey) {\n    this.setState({ highlightedNodeKey: nodeKey });\n  }\n\n  handleLoadByFile(file) {\n    try {\n      const reader = new FileReader();\n      reader.onerror = (event) => {\n        reader.abort();\n        this.setState({ action: 'load', error: 'Error while reading file' });\n      };\n      reader.onload = () => {\n        this.loadFromJSONText(reader.result);\n      };\n      reader.readAsText(file);\n    } catch (error) {\n      this.setState({ action: 'load', error });\n    }\n  }\n\n  loadFromJSONText(text) {\n    let tc;\n    const status = { action: 'load' };\n    let sourceDraft = '';\n    try {\n      const json = JSON.parse(text);\n      tc = TrevCollection.fromJSON(json);\n    } catch (error) {\n      try {\n        tc = FileTraceWriter.parseToTC(text);\n      } catch (error2) {\n        status.error = `Failed to parse as TrevCollection json [error=${error}] or as FileTraceWriter output [error=${error2}]`;\n        console.log(error);\n        console.log(error2);\n        tc = TrevCollection.empty();\n      }\n    }\n\n    tc = tc.withDenormalizedInfo();\n    sourceDraft = (tc.astb.asts.eval && tc.astb.asts.eval.codeSlice) || '';\n\n    this.setState({\n      tc,\n      status,\n      sourceDraft,\n      ...defaultQueryState,\n      ...this.doQuery(tc, defaultQueryState.traceQuery),\n    });\n  }\n\n  handleNodeSelectedToggle(nodeKey) {\n    this.handleTraceQueryChange(\n      update(this.state.traceQuery, {\n        nodes: { $toggle: [nodeKey] }\n      }));\n  }\n\n  handleOpenModalData(modalData) {\n    this.setState({ ...this.state, modalData });\n  }\n\n  handleCloseModalData() {\n    this.setState({ ...this.state, modalData: undefined });\n  }\n\n  handlePlay() {\n    this.handleStop();\n    if (this.state.filteredTC.trevs.length === 0) {\n      return;\n    }\n\n    let nextIndex = 0;\n    const handler = () => {\n      if (nextIndex >= this.state.filteredTC.trevs.length) {\n        this.handleStop();\n        return;\n      }\n      this.handleHoveredTrevChange(this.state.filteredTC.trevs[nextIndex].id);\n      nextIndex += 1;\n    };\n    handler();\n    const id = window.setInterval(handler, 1000);\n    this.setState({ walkthroughTimerId: id });\n  }\n\n  handleStop() {\n    if (this.state.walkthroughTimerId) {\n      this.handleHoveredTrevChange(null);\n      window.clearInterval(this.state.walkthroughTimerId);\n      this.setState({ walkthroughTimerId: undefined });\n    }\n  }\n\n  doRun(source) {\n    let tc;\n    let trace;\n    const status = { action: 'run' };\n    try {\n      trace = instrumentedEval(source, { saveInstrumented: true });\n      tc = trace.toTC().withDenormalizedInfo();\n      status.tracedError = trace.error;\n\n      let refreshScheduled = false;\n      trace.onChange = () => {\n        if (refreshScheduled) {\n          return;\n        }\n        refreshScheduled = true;\n\n        window.setTimeout(() => {\n          refreshScheduled = false;\n          if (this.state.trace !== trace) {\n            return;\n          }\n\n          const tc = trace.toTC().withDenormalizedInfo();\n          this.setState({\n            tc,\n            ...this.doQuery(tc, this.state.traceQuery),\n          });\n        });\n      };\n    } catch (error) {\n      console.log(error)\n      tc = TrevCollection.empty();\n      status.error = error;\n    }\n  \n    return {\n      tc,\n      trace,\n      status,\n      sourceDraft: source,\n      ...defaultQueryState,\n      ...this.doQuery(tc, defaultQueryState.traceQuery),\n    };\n  }\n\n  doQuery(tc, traceQuery) {\n    const nodes = Object.keys(traceQuery.nodes).filter((key) => traceQuery.nodes[key]);\n    const nodeTypes = Object.keys(traceQuery.nodeTypes).filter((key) => traceQuery.nodeTypes[key]);\n    const types = Object.keys(traceQuery.types).filter((key) => traceQuery.types[key]);\n    const filteredTC = tc.filter((trev) =>\n      (nodes.length === 0 || nodes.includes(trev.denormalized.node.biKey))\n      && (nodeTypes.length === 0 || nodeTypes.includes(trev.denormalized.node.type))\n      && (types.length === 0 || types.includes(trev.type))\n    );\n    return {\n      filteredTC,\n      traceQuery,\n    };\n  }\n\n  handleRun(source) {\n    this.setState(this.doRun(source));\n  }\n\n  handleSourceDraftChange(sourceDraft) {\n    this.setState({ sourceDraft });\n  }\n\n  render() {\n    return (\n      <AppView tc={this.state.tc}\n               filteredTC={this.state.filteredTC}\n               traceQuery={this.state.traceQuery}\n               sourceDraft={this.state.sourceDraft}\n               highlightedTrevId={this.state.highlightedTrevId}\n               highlightedNodeKey={this.state.highlightedNodeKey}\n               onTraceQueryChange={this.handleTraceQueryChange}\n               onHoveredTrevChange={this.handleHoveredTrevChange}\n               onHoveredNodeChange={this.handleHoveredNodeChange}\n               onLoadByFile={this.handleLoadByFile}\n               onLoadByPaste={this.handleLoadByPaste}\n               onNodeSelectedToggle={this.handleNodeSelectedToggle}\n               onRun={this.handleRun}\n               onSourceDraftChange={this.handleSourceDraftChange}\n               onOpenModalData={this.handleOpenModalData}\n               onCloseModalData={this.handleCloseModalData}\n               onPlay={this.handlePlay}\n               onStop={this.handleStop}\n               isPlaying={!!this.state.walkthroughTimerId}\n               modalData={this.state.modalData}\n               status={this.state.status} />\n    )\n  }\n}\n\nexport default AppContainer;\n","import { parseSync, transformSync } from '@babel/core';\nimport bluntInstrumentPlugin from 'babel-plugin-blunt-instrument';\nimport {\n  ArrayTrace,\n  ASTBundle,\n  copyNodeIdsBetweenASTs,\n  Tracer,\n} from 'blunt-instrument-core';\n\n/**\n * This method ties together various pieces of blunt-instrument to provide a\n * convenient way of instrumenting a piece of javascript code, evaluating it,\n * and returning the trace in a consumable format.\n *\n * The input is javascript source code as a string, and the output is an ArrayTrace instance.\n *\n * If the code throws an error, it will be caught and stored in the `error` field of the\n * return value.\n *\n * Invalid input code or an error in initializing the tracer may cause this function\n * to throw errors.\n *\n * @param {string} source - javascript code to be instrumented & evaluated\n * @param {object} opts\n * @param {boolean} opts.saveInstrumented - if true, the AST of the instrumented\n *   code will also be saved. It will be added as a field named `instrumentedAST`\n *   on the `astb` field of the trace.\n * @returns {ArrayTrace}\n */\nexport default function (source, { saveInstrumented = false } = {}) {\n  const tracerVar = '_bie_tracer';\n\n  if (source.includes(tracerVar)) {\n    // eslint-disable-next-line no-console\n    console.warn(`Code includes \"${tracerVar}\", which is defined by instrumentedEval. This\nmay interfere with instrumentedEval, the code, or both.`);\n  }\n\n  const trace = new ArrayTrace();\n  const tracer = new Tracer();\n  tracer.addListener(trace);\n\n  const babelOpts = {\n    configFile: false,\n    plugins: [\n      [bluntInstrumentPlugin,\n        {\n          tracerVar,\n          astCallback: trace.handleRegisterAST.bind(trace),\n          astId: 'eval',\n          astSelfRegister: false,\n        }],\n    ],\n  };\n\n  if (saveInstrumented) {\n    babelOpts.ast = true;\n  }\n\n  const babelResult = transformSync(source, { ast: true, sourceType: 'module', ...babelOpts });\n\n  const ast = trace.astb.asts.eval;\n  if (!ast) {\n    throw new Error('blunt-instrument-babel-plugin did not invoke callback with AST');\n  }\n\n  const { code } = babelResult;\n  const fn = new Function(tracerVar, `\"use strict\";${code}`); // eslint-disable-line no-new-func\n  try {\n    fn(tracer);\n  } catch (e) {\n    trace.error = e;\n  }\n\n  if (saveInstrumented) {\n    const parsed = parseSync(code);\n    copyNodeIdsBetweenASTs(babelResult.ast, parsed);\n    const instrumentedASTB = new ASTBundle();\n    instrumentedASTB.add('eval', parsed, code);\n    trace.astb.instrumentedAST = instrumentedASTB.asts.eval;\n  }\n\n  return trace;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = traverseAST;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Traverses the given babel AST and calls the given function with each node in\n * the tree.\n * I would just use the traverseFast function from @babel/types, but I don't want\n * to pull in that dependency to this package.\n * @param {Node} node - babel node\n * @param {function} fn\n */\nfunction traverseAST(node, fn) {\n  if (!(node && _typeof(node) === 'object')) {\n    return;\n  }\n\n  if (node.type) {\n    fn(node);\n  }\n\n  Object.values(node).forEach(function (val) {\n    return traverseAST(val, fn);\n  });\n}"],"sourceRoot":""}